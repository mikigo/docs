"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4967"],{7050:function(n,e,s){s.r(e),s.d(e,{default:()=>i});var c=s(2676),l=s(453);function r(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3",p:"p",code:"code",img:"img",blockquote:"blockquote",ul:"ul",li:"li",strong:"strong",pre:"pre",h4:"h4",h5:"h5",h6:"h6",ol:"ol"},(0,l.ah)(),n.components);return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(e.h1,{id:"针对pms用例数据检查与自动化工程csv文件数据同步的方法调研报告",children:["针对PMS用例数据检查与自动化工程CSV文件数据同步的方法调研报告",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#针对pms用例数据检查与自动化工程csv文件数据同步的方法调研报告",children:"#"})]}),"\n",(0,c.jsxs)(e.h2,{id:"1-相关术语",children:["1 相关术语",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-相关术语",children:"#"})]}),"\n",(0,c.jsxs)(e.table,{children:["\n",(0,c.jsxs)(e.thead,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.th,{children:"缩写"}),"\n",(0,c.jsx)(e.th,{children:"全称"}),"\n",(0,c.jsx)(e.th,{children:"描述"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.tbody,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"PMS"}),"\n",(0,c.jsx)(e.td,{children:"/"}),"\n",(0,c.jsx)(e.td,{children:"项目管理软件，本文中主要体现在测试用例管理上。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"爬虫"}),"\n",(0,c.jsx)(e.td,{children:"/"}),"\n",(0,c.jsx)(e.td,{children:"一般是基于 Python 编写的一段自动抓取互联网信息的程序，从互联网上抓取对于我们有价值的信息。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"CSV"}),"\n",(0,c.jsx)(e.td,{children:"Comma-Separated Values"}),"\n",(0,c.jsx)(e.td,{children:"逗号分隔值文件格式，本文中该格式文件用于管理自动化测试工程测试用例。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"配置化测试"}),"\n",(0,c.jsx)(e.td,{children:"/"}),"\n",(0,c.jsx)(e.td,{children:"根据不同测试场景，配置不同的用例组合情况进行测试，例如只测试核心用例，跳过其他类型用例测试。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"JSON"}),"\n",(0,c.jsx)(e.td,{children:"JavaScript Object Notation"}),"\n",(0,c.jsx)(e.td,{children:"一种轻量级的数据交换格式。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"Urllib"}),"\n",(0,c.jsx)(e.td,{children:"/"}),"\n",(0,c.jsx)(e.td,{children:"Python 标准库，用于操作网页 URL，并对网页的内容进行抓取处理。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"Pandas"}),"\n",(0,c.jsx)(e.td,{children:"Python data analysis"}),"\n",(0,c.jsx)(e.td,{children:"一个开放源码、BSD 许可的库，提供高性能、易于使用的数据结构和数据分析工具。"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"DataFrame"}),"\n",(0,c.jsx)(e.td,{children:"/"}),"\n",(0,c.jsx)(e.td,{children:"一个表格型的数据结构，它含有一组有序的列，每列可以是不同的值类型。"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h2,{id:"2-问题",children:["2 问题",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-问题",children:"#"})]}),"\n",(0,c.jsxs)(e.h3,{id:"21-问题背景",children:["2.1 问题背景",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#21-问题背景",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		在应用 ",(0,c.jsx)(e.code,{children:"UI "}),"自动化测试工程中每一个测试应用均存在一个或多个 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件，主要用于管理自动化测试用例，每一行数据代表一条测试用例："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/CSV%E6%96%87%E4%BB%B6%E5%88%97.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		其中 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件中每一条用例都与 ",(0,c.jsx)(e.code,{children:"PMS"})," 某一条用例存在关联关系，例如",(0,c.jsx)(e.code,{children:"图1"}),"中用例 ",(0,c.jsx)(e.code,{children:"id"})," 为1的自动化用例在 ",(0,c.jsx)(e.code,{children:"PMS"})," 中展示："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/PMS%E7%94%A8%E4%BE%8B%E7%A4%BA%E4%BE%8B.png",alt:""})}),"\n",(0,c.jsx)(e.p,{children:"​		通过图1与图2可以得出两者关联关系："}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"CSV 文件用例id：对应 PMS 用例标题自定义标签[001]"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件用例来源：对应 PMS 用例标题自定义标签[acp1/2/3/4]"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件用例标签：对应 PMS 用例标题自定义标签[core/smoke]"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件用例等级：对应 PMS 用例优先级字段"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件中存在的用例在 PMS 中，自动化相关的关键字需更新为："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"执行方式：自动化执行"}),"\n",(0,c.jsx)(e.li,{children:"是否已自动化：是"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​"}),"\n",(0,c.jsxs)(e.h3,{id:"22-问题详情",children:["2.2 问题详情",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#22-问题详情",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		为了保证用例数据的准确性，PMS 字段、标题标签需要随时更新，同时 CSV 文件数据也需要同步修改来保证数据的一致性。但目前实际项目中出现诸多更新不及时的问题："}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"PMS 用例转换为自动化用例后，关键字：执行方式、是否已自动化未更新字段。"}),"\n",(0,c.jsx)(e.p,{children:"PMS 用例转换为自动化用例后，未增加自动化 id 标签。"}),"\n",(0,c.jsx)(e.p,{children:"PMS 用例等级发生变化后，未同步至自动化工程 CSV 文件。"}),"\n",(0,c.jsx)(e.p,{children:"PMS 用例标签发生变化后，未同步至自动化工程 CSV 文件。"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件删除用例后，PMS 用例信息未同步。"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件新增用例后，未同步至 PMS 用例标题。"}),"\n",(0,c.jsx)(e.p,{children:"CSV 文件新增标签后，未同步至 PMS 用例标题。"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​		以上情况日积月累下，存在问题的用例数量会越来越多，就目前通过以上示例条件做数据筛选，得出结论存在问题数量为2000左右。其中问题数量占比与解决重心为："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"PMS 与 CSV 两端数据不匹配 - 占比25%（重要）"}),"："]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"PMS"})," 已实现自动化用例，在自动化工程所需标签再变更后，未同步至自动化工程 ",(0,c.jsx)(e.code,{children:"CSV "}),"文件，导致影响了配置化测试的有效性，需要重点解决该问题。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:[(0,c.jsx)(e.strong,{children:"PMS 用例数据/字段错误 - 占比75%（次要）"}),"："]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["除以上问题外，主要是 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例数据关键字、状态等不正确，不会影响自动化测试结果，但会影响手工测试与数据统计，需解决但不是那么急迫。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"例如用例状态未审核导致测试单无法关联、未修改自动化字段导致统计自动化用例数据错误。"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["​		总结本章节描述的问题核心为 ",(0,c.jsx)(e.code,{children:"PMS"})," 端数据与自动化测试工程中 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件中数据不一致，手动修改效率太过低下，且会影响当前工作任务；若不进行处理，问题则会积累的越来越多，进入恶性循环。所以目前需要一种能够快速同步两端数据使其一致的方案。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h2,{id:"3-现状",children:["3 现状",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-现状",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		针对上一章节提出的问题解决流程如下："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E8%A7%A3%E5%86%B3%E6%B5%81%E7%A8%8B.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		通过流程描述，核心涉及 ",(0,c.jsx)(e.code,{children:"PMS"})," 项目管理系统用例数据 与 自动化测试工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件，该 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件数据设计非市面上现存设计方案，为根据项目情况与需求而设计出的结构。"]}),"\n",(0,c.jsx)(e.p,{children:"​		需要对两端数据进行同步，是特定场景下的需求，所以不存在现存的解决方案，基于实际情况预想了两个方向的解决方案，接下来对预想方案进行对比分析。"}),"\n",(0,c.jsxs)(e.h3,{id:"31-方案描述",children:["3.1 方案描述",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#31-方案描述",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"方案1："})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["通过 ",(0,c.jsx)(e.code,{children:"PMS"})," 功能进行批量数据获取，借助 ",(0,c.jsx)(e.code,{children:"Excel"})," 进行数据分析、检查。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["人工进行数据对比并同步差异数据至 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["通过本地 ",(0,c.jsx)(e.code,{children:"Excel"})," 文件进行人工修改后批量上传至 ",(0,c.jsx)(e.code,{children:"PMS"}),"。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"方案2："})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"通过爬虫程序进行批量数据获取，保存至本地过程中进行数据分析与检查。"}),"\n",(0,c.jsxs)(e.li,{children:["保存完成后以应用为维度，对比双端数据，同步差异数据至 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件。"]}),"\n",(0,c.jsxs)(e.li,{children:["通过步骤1检查结果进行数据修改，根据项目情况可选择：","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["导出 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例，根据步骤1分别对应用检查结果进行针对性用例数据修改，批量上传至 ",(0,c.jsx)(e.code,{children:"PMS"})," 完成修改。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["根据步骤1的检查结果调用 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例接口，批量完成用例信息修改。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h3,{id:"32-方案对比",children:["3.2 方案对比",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#32-方案对比",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		多维度对比详情如下："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["准备耗时","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["方案1：手工操作+ ",(0,c.jsx)(e.code,{children:"PMS"})," 项目管理工具 ",(0,c.jsx)(e.code,{children:"WEB"})," 现有功能，无需准备时间"]}),"\n",(0,c.jsx)(e.li,{children:"方案2：需要消耗开发程序的时间"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["易用性","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["方案1：需要了解自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件设计、 ",(0,c.jsx)(e.code,{children:"PMS"})," 使用方法、校验规则、同步规则"]}),"\n",(0,c.jsx)(e.li,{children:"方案2：需要了解程序运行参数/配置"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["高效性","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"方案1：大部分工作依赖手工完成，用例技术越大，效率越低"}),"\n",(0,c.jsx)(e.li,{children:"方案2：自动化完成，用例基数越大，效率越高"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["复用性","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"方案1：可同时对多个应用使用"}),"\n",(0,c.jsx)(e.li,{children:"方案2：可同时对多个应用使用"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["扩展性","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"方案1：不具备扩展价值"}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["方案2：可用于其他领域，例如周期性用例质量监控。同时若后期 ",(0,c.jsx)(e.code,{children:"PMS"})," 标签、",(0,c.jsx)(e.code,{children:"CSV"})," 文件设计出现增量/变化，可在原有设计的基础上进行功能扩展支持。"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h3,{id:"33-对比结论",children:["3.3 对比结论",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#33-对比结论",children:"#"})]}),"\n",(0,c.jsxs)(e.table,{children:["\n",(0,c.jsxs)(e.thead,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.th,{}),"\n",(0,c.jsx)(e.th,{align:"center",children:"准备耗时"}),"\n",(0,c.jsx)(e.th,{align:"center",children:"易用性"}),"\n",(0,c.jsx)(e.th,{align:"center",children:"高效性"}),"\n",(0,c.jsx)(e.th,{align:"center",children:"复用性"}),"\n",(0,c.jsx)(e.th,{align:"center",children:"扩展性"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.tbody,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"方案1"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"优"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"劣"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"劣"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"持平"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"劣"}),"\n"]}),"\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"方案2"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"劣"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"优"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"优"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"持平"}),"\n",(0,c.jsx)(e.td,{align:"center",children:"优"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​		两套方案综合对比下来，除了方案2在前期准备耗时上处于劣势，在其他方面整体优于方案1，所以最终选择方案2。"}),"\n",(0,c.jsxs)(e.h2,{id:"4-技术方案",children:["4 技术方案",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4-技术方案",children:"#"})]}),"\n",(0,c.jsxs)(e.h3,{id:"41-整体设计",children:["4.1 整体设计",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#41-整体设计",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		方案2涉及爬虫和数据处理，首先语言定位为 ",(0,c.jsx)(e.code,{children:"Python"})," 无可争议，核心库选择： ",(0,c.jsx)(e.code,{children:"urllib"})," + ",(0,c.jsx)(e.code,{children:"pandas"})," 的组合；核心流程为：数据获取 -> 数据清理 -> 数据检测 ->数据同步 -> ",(0,c.jsx)(e.code,{children:"PMS"})," 端数据修改。"]}),"\n",(0,c.jsx)(e.p,{children:"​		核心原理："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["使用 ",(0,c.jsx)(e.code,{children:"urllib"})," 进行 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据爬取，爬取到的数据是  ",(0,c.jsx)(e.code,{children:"ASCII"})," 编码 +  ",(0,c.jsx)(e.code,{children:"JSON"})," 数据格式，转换为中文。"]}),"\n",(0,c.jsxs)(e.li,{children:["制定用例检测规则与错误类型，在获取到 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例数据后逐一对每一条用例进行正确性检测。"]}),"\n",(0,c.jsxs)(e.li,{children:["通过 ",(0,c.jsx)(e.code,{children:"pandas"})," 进行后续数据处理工作：","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"爬虫数据设置索引、多权重排序、去重、填充空数据等，结合检测结果保存至本地。"}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"PMS"})," 数据与自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件数据进行关键项数据抽取与比对"]}),"\n",(0,c.jsxs)(e.li,{children:["根据比对结果，同步存在差异的数据至自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["通过用例检测结果，参考错误类型对 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据进行修改（二选一）：","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["逐一修改后，使用 ",(0,c.jsx)(e.code,{children:"PMS"})," 批量上传功能"]}),"\n",(0,c.jsxs)(e.li,{children:["抽取问题用例，分析错误类型，使用 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例编辑接口回填正确数据"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​"}),"\n",(0,c.jsxs)(e.p,{children:["​		",(0,c.jsx)(e.strong,{children:"整体方案中执行流程设计方案如下："})]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E4%B8%BB%E6%B5%81%E7%A8%8B.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		工具暂命名为 ",(0,c.jsx)(e.code,{children:"pms_label_manage"}),"  ，整体目录结构设计如下："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"  autotest-basic-frame\n   ├── src \n   │   ├──pms_label_manage                    # 主目录\n   │   │      ├── pms_label_manage.py         # 工具脚本\n   │   │      ├── manage_config.ini		      # 工具配置文件\n   │   │      ├── assist_tool.sh		      # 环境部署+运行\n   |   |      ├── task_data                   # 任务数据汇总\n   |   |      |     ├── 0606_0606             # 6月6日6点6分任务数据\n   |   |      |     |    ├──   crawler_data   # 爬虫数据\n   |   |      |     |    ├──   bakup_data     # 备份数据\n   |   |      |     |    ├──   update_data    # 已更新数据\n   |   |      |     |    └──   run.log        # 本次任务运行日志   \n   |   |      |     └── 0608_0606             # 6月8日6点6分任务数据 \n   └─  └─     └── README.md                   # 使用说明\n"})}),"\n",(0,c.jsxs)(e.p,{children:["​		如上文所述，工具行为通过配置文件 ",(0,c.jsx)(e.code,{children:"manage_config"})," 进行管理，使其可配置性与易用性都更高。"]}),"\n",(0,c.jsx)(e.p,{children:"​		以下示例为设计的配置文件爬虫部分配置项："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-ini",children:"[run]\n# 激活项目\nactivation_project = app,os\n\n# 当前任务执行的项目\nrun_project = app\n\n# sync(爬取pms数据并同步至本地csv)/crawler(爬取pms数据并检测)/backup(备份本地csv)/pms_fix（修正pms用例数据）\nrun_option = sync\n\n# 执行任务的应用对象：all（项目下所有应用）/draw（仅执行画板）/...\nrun_apps = draw\n\n# 爬取用例类型：all（全用例）/auto（仅自动化相关用例）\ncrawler_cases_area = auto\n\n[csv_control]\n# 需要从爬取的PMS数据中提取的数据\ncsv_crawler_columns = 用例id,用例等级,用例标签,用例来源,PMS编号,PMS模块,PMS标题,执行方式,自动化实现,用例状态,检测异常\n\n# 自动化工程CSV文件关键列\ncsv_local_columns = 用例id,用例等级,用例标签,用例来源\n\n# PMS与CSV数据共同索引\ncsv_index = 用例id\n\n# 保存PMS爬虫数据排序权重\ncsv_crawler_sort = 用例id,用例等级\n\n# PMS数据与CSV数据比对后，更新的列数据\ncsv_local_update =用例等级,用例标签\n\n[pms]\n# pms账号密码，用于爬取PMS数据前登录验证\npms_username = None\npms_passwd = None\n\n[app]\n# 相机应用id\ncamera = 110\n\n# 截图录屏应用id\ngrand_search = 186\n\n......\n"})}),"\n",(0,c.jsxs)(e.h3,{id:"42-关键技术",children:["4.2 关键技术",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42-关键技术",children:"#"})]}),"\n",(0,c.jsxs)(e.h4,{id:"421-数据爬取与检测",children:["4.2.1 数据爬取与检测",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#421-数据爬取与检测",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		",(0,c.jsx)(e.code,{children:"urllib"})," 库是 ",(0,c.jsx)(e.code,{children:"Python"})," 标准库，用于操作网页 ",(0,c.jsx)(e.code,{children:"URL"}),"，并对网页的内容进行抓取处理，主要对象是 ",(0,c.jsx)(e.code,{children:"PMS "}),"项目管理 中用例部分的内容数据。"]}),"\n",(0,c.jsxs)(e.h5,{id:"4211-准备工作",children:["4.2.1.1 准备工作",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4211-准备工作",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		需要通过抓包的方式对登录、用例接口进行了参数摸底，制定后续对应接口的请求参数，并且根据参数内容收集项目、应用在数据库中的具体 ",(0,c.jsx)(e.code,{children:"id"}),"。这部分内容略过，本章节主要聚焦数据爬取、检测与同步。"]}),"\n",(0,c.jsxs)(e.h5,{id:"4212-数据爬取",children:["4.2.1.2 数据爬取",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4212-数据爬取",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		流程是：通过 ",(0,c.jsx)(e.code,{children:"PMS"})," 登录接口进行登录 -> 保存cookie信息 -> cookie放入请求头并调用用例接口 -> 获取返回数据 -> 处理数据。"]}),"\n",(0,c.jsxs)(e.h6,{id:"42121-登录接口逻辑",children:["4.2.1.2.1 登录接口逻辑",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42121-登录接口逻辑",children:"#"})]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"设计流程为："}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E7%99%BB%E5%BD%95%E6%B5%81%E7%A8%8B%E8%AE%BE%E8%AE%A1.png",alt:""})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"实现代码："}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'	def __init__(self, project_name, apps_name, timeout=8)\n    \n    	......\n    \n        if os.path.exists(self.ini_cf_path):\n            self.username = self.ini_cf["pms"]["pms_username"]\n            self.passwd = self.ini_cf["pms"]["pms_passwd"]\n            if self.username == "None" or self.passwd == "None":\n                self.username, self.passwd = PmsCases.__pms_login_input()\n        else:\n            self.last_node = "init: ini missing"\n            self.__run_node_log(\n                "[__init__]ini file", "配置文件缺失:pms2csv.ini", "error"\n            )\n            PmsCases.__error_mes("* Error: An exception occurs, interrupt tasks !")\n            raise FileNotFoundError("not find file \'pms2csv.ini\'")\n		\n        self.pms_login_url = (\n            "https://pms.uniontech.com/user-login-Lw==.html"\n            f"?account={self.username}&password={self.passwd}"\n        )\n        \n        ......\n        \n        def pms_data_crawler(self):\n        """\n         爬取pms用例数据\n        :return: /\n        """\n        print(f"\\n* {self.apps_name} pms_data_crawler ...\\n")\n        self.__run_node_log("[pms_data_crawler]main", "主程序运行")\n        try:\n            self.__run_node_log("[pms_data_crawler]login", "pms登陆")\n            local_response = self.get(self.pms_login_url).text\n            if "登录失败" in local_response or "忘记密码" in local_response:\n                self.__run_node_log(\n                    "[pms_data_crawler]login user/passwd", "pms登陆失败", "error"\n                )\n                PmsCases.__error_mes("Error: the username or password is incorrect !")\n                exit(1)\n        except requests.exceptions.ConnectionError:\n            self.__run_node_log("[pms_data_crawler]login network", "pms登陆失败", "error")\n            PmsCases.__error_mes(\n                "Error: Failed to access [PMS], check whether the network is normal !"\n            )\n            exit(1)\n\n			......\n\n\n	@staticmethod\n    def __pms_login_input():\n        """\n        人机交互获取pms账号密码\n        """\n        local_username = input("Input pms-username:")\n        local_passwd = input("Input pms-passwd:")\n        if not local_username or not local_passwd:\n            PmsCases.__error_mes("* Error: An exception occurs, interrupt tasks !")\n            raise ValueError("pms-username/passwd is Null")\n        else:\n            return local_username, local_passwd\n'})}),"\n",(0,c.jsxs)(e.p,{children:["​		通过以上实现方案完成了 ",(0,c.jsx)(e.code,{children:"PMS"})," 登录环境的内容。"]}),"\n",(0,c.jsxs)(e.h6,{id:"42122-用例数据获取",children:["4.2.1.2.2 用例数据获取",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42122-用例数据获取",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		通过用例接口调试时发现，用例接口返回数据为  ",(0,c.jsx)(e.code,{children:"ASCII"})," 编码 +  ",(0,c.jsx)(e.code,{children:"JSON"})," 数据格式，所以需要进行中文转换，接口返回数据如下："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'{"status":"success","data":"{\\"title\\":\\"\\\\u4e13\\\\u7528\\\\u8bbe\\\\u5907\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edfV20\\\\u4f01\\\\u4e1a\\\\u7248-\\\\u7528\\\\u4f8b\\",\\"products\\":{\\"355\\":\\"\\\\u6388\\\\u6743\\\\u7ba1\\\\u7406\\\\u5e73\\\\u53f0\\",\\"347\\":\\"\\\\u72ec\\\\u7acb\\\\u4e0a\\\\u6e38\\",\\"343\\":\\"X86\\\\u4e13\\\\u9879\\\\u9002\\\\u914d\\",\\"339\\":\\"V23 DTK\\",\\"337\\":\\"\\\\u73b2\\\\u73d1\\\\u9879\\\\u76ee\\\\u4e8c\\\\u671f\\",\\"335\\":\\"V23 Qt\\",\\"333\\":\\"V23\\\\u5185\\\\u6838\\",\\"331\\":\\"\\\\u7cfb\\\\u7edf\\\\u5b89\\\\u5168\\\\u4e8c\\\\u671fV6\\",\\"329\\":\\"\\\\u7b14\\\\u8bb0\\\\u672c\\",\\"327\\":\\"\\\\u7edf\\\\u4fe1\\\\u670d\\\\u52a1\\\\u5668\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edfV20\\",\\"325\\":\\"\\\\u4e2d\\\\u6587\\\\u8f93\\\\u5165\\\\u6cd5V6\\",\\"321\\":\\"\\\\u4f01\\\\u4e1a\\\\u5fae\\\\u4fe1\\",\\"313\\":\\"\\\\u539f\\\\u5b50\\\\u66f4\\\\u65b0\\",\\"311\\":\\"UOS Ready\\",\\"301\\":\\"\\\\u8f6f\\\\u4ef6\\\\u81ea\\\\u4e3b\\\\u9002\\\\u914d\\\\u5de5\\\\u5177\\",\\"295\\":\\"\\\\u7edf\\\\u4fe1\\\\u6709\\\\u89c4\\\\u8fd0\\\\u884c\\\\u73af\\\\u5883\\",\\"289\\":\\"\\\\u684c\\\\u9762\\\\u4e13\\\\u4e1a\\\\u7248V23\\",\\"11\\":\\"\\\\u684c\\\\u9762\\\\u4e13\\\\u4e1a\\\\u7248V20\\",\\"89\\":\\"\\\\u684c\\\\u9762\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edf\\\\u793e\\\\u533a\\\\u7248V20\\",\\"4\\":\\"\\\\u670d\\\\u52a1\\\\u5668\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edfV20\\\\uff081xxxd\\\\uff09\\",\\"82\\":\\"\\\\u670d\\\\u52a1\\\\u5668\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edfV20\\\\uff081xxxa\\\\uff09\\",\\"108\\":\\"\\\\u670d\\\\u52a1\\\\u5668\\\\u64cd\\\\u4f5c\\\\u7cfb\\\\u7edfV20\\\\uff081xxxe\\\\uff09\\"\n\n...... \n \n \\"needconfirm\\":false,\\"bugs\\":0,\\"results\\":\\"1\\",\\"caseFails\\":0,\\"stepNumber\\":\\"1\\"}},\\"branch\\":0,\\"branches\\":{\\"0\\":\\"\\\\u6240\\\\u6709\\\\u5e73\\\\u53f0\\",\\"110\\":\\"aarch64\\",\\"111\\":\\"x86_64\\",\\"112\\":\\"mips64\\",\\"113\\":\\"sw_64\\",\\"114\\":\\"loongarch(3A5000)\\"},\\"suiteList\\":{\\"317\\":{\\"id\\":\\"317\\",\\"product\\":\\"107\\",\\"name\\":\\"\\\\u4e13\\\\u7528\\\\u8bbe\\\\u59071021-\\\\u955c\\\\u50cf-\\\\u65b0\\\\u9700\\\\u6c42\\\\u5168\\\\u7528\\\\u4f8b\\",\\"desc\\":\\"\\\\u5bf91021\\\\u7cfb\\\\u7edf\\\\u6240\\\\u6709\\\\u65b0\\\\u9700\\\\u6c42\\\\u7528\\\\u4f8b\\\\u521b\\\\u5efa\\\\u5957\\\\u4ef6\\",\\"type\\":\\"public\\",\\"addedBy\\":\\"ut001652\\",\\"addedDate\\":\\"2022-04-11 10:16:14\\",\\"lastEditedBy\\":\\"ut001652\\",\\"lastEditedDate\\":\\"2022-05-12 15:29:41\\",\\"deleted\\":\\"0\\"}},\\"suiteID\\":0,\\"setModule\\":true}","md5":"27fc9cc5fb6c203a28b225207f328d7f"}\n'})}),"\n",(0,c.jsxs)(e.p,{children:["​		除此之外还发现 ",(0,c.jsx)(e.code,{children:"JSON"}),"  数据格式不规范，例如上述数据中 ",(0,c.jsx)(e.code,{children:'\\"setModule\\":true'}),"  缺少引号，这类问题均需要处理。"]}),"\n",(0,c.jsxs)(e.p,{children:["​		因为每次任务并非都是单一应用，存在同时同步10多个应用的场景，所以在数据获取这一阶段设计流程为：根据任务应用列表建立循环 -> 每次循环爬取一个应用的数据 -> 数据编码转换为 中文 -> 处理 ",(0,c.jsx)(e.code,{children:"JSON"})," 数据格式问题 -> 执行下一次循环应用数据爬取。"]}),"\n",(0,c.jsx)(e.p,{children:"​		部分关键实现代码如下："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'@staticmethod\ndef unicode_to_cn(in_str):\n    """\n    修改数据并进行编码解码操作，以完成u码转中文\n    """\n    local_in_str_replace = (\n        in_str.replace(r"\\"", \'"\')\n            .replace(r"\\/", "/")\n            .replace(r"\\\\u", r"\\u")\n            .replace(r"\\\\n", "")\n            .replace(r"\\\\r", "")\n    )\n    # local_out = None\n    if isinstance(local_in_str_replace, bytes):\n        local_temp = str(local_in_str_replace, encoding="utf-8")\n        local_out = local_temp.encode("utf-8").decode("unicode_escape")\n    else:\n        local_out = local_in_str_replace.encode("utf-8").decode("unicode_escape")\n    return local_out\n\n	def pms_data_crawler(self):\n		if os.path.exists(self.crawler_dir):\n			pass\n        else:\n            os.makedirs(self.crawler_dir)\n        for local_app_name in self.apps_name:\n            if self.ini_cf.has_section(local_app_name):\n                for local_module_name, local_module_id in self.ini_cf.items(\n                    local_app_name\n                ):\n                    local_module_file_path = os.path.join(\n                        self.crawler_dir, local_module_name + ".csv"\n                    )\n                    try:\n                        local_response = self.get(\n                            f"https://pms.uniontech.com/"\n                            f"testcase-browse-{self.ini_cf[self.project_name][local_app_name]}"\n                            f"-0-bymodule-{local_module_id}-id_desc-0-10000-1.json"\n                        )\n                        local_pms_json = (\n                            PmsCases.__unicode_to_cn(local_response.text)\n                            .replace(\'"data":"{\', \'"data":{\')\n                            .replace(\'","md5"\', \',"md5"\')\n                            .replace(":null", \':"null"\')\n                            .replace(":true", \':"true"\')\n                            .replace(":false", \':"false"\')\n                        )\n                        self.__crawler_save_csv(local_pms_json, local_module_file_path)\n                    except requests.exceptions.ConnectionError:\n                        print(\n                            "Error: Failed to access [PMS], check whether the network is normal !"\n                        )\n                        exit(1)\n            else:\n                try:\n                    local_app_file_path = os.path.join(\n                        self.crawler_dir, local_app_name + ".csv"\n                    )\n                    local_response = self.get(\n                        f"https://pms.uniontech.com/"\n                        f"testcase-browse-{self.ini_cf[self.project_name][local_app_name]}-0-"\n                        f"bymodule-0-id_desc-0-10000-1.json"\n                    )\n                    local_pms_json = (\n                        PmsCases.__unicode_to_cn(local_response.text)\n                        .replace(\'"data":"{\', \'"data":{\')\n                        .replace(\'","md5"\', \',"md5"\')\n                        .replace(":null", \':"null"\')\n                        .replace(":true", \':"true"\')\n                        .replace(":false", \':"false"\')\n                    )\n                    self.__crawler_save_csv(local_pms_json, local_app_file_path)\n                except requests.exceptions.ConnectionError:\n                    print(\n                        "Error: Failed to access [PMS], check whether the network is normal !"\n                    )\n                    exit(1)\n        print(f"\\n* {self.apps_name} pms_data_crawler successfully !\\n")\n        self.__run_node_log("[pms_data_crawler]main", "主程序结束")\n'})}),"\n",(0,c.jsxs)(e.h6,{id:"42123-数据检测",children:["4.2.1.2.3 数据检测",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42123-数据检测",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		通过以上数据获取与处理后，成功的把数据转换成了中文，下面截取数据中某一条用例数据信息做展示："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-json",children:'{\n    "cases":{\n        "815041":{\n            "id":"815041",\n            "product":"107",\n            "branch":"0",\n            "lib":"0",\n            "module":"61219",\n            "path":"0",\n            "story":"16661",\n            "storyVersion":"1",\n            "title":"应用自启配置：镜像验证，验证同时配置多个应用全屏自启动功能正确",\n            "precondition":"1. 已载入镜像2. 已获取超级管理员权限",\n            "keywords":"4.0-beta",\n            "pri":"3",\n            "type":"feature",\n            "stage":"feature",\n            "howRun":"",\n            "scriptedBy":"",\n            "scriptedDate":"0000-00-00",\n            "scriptStatus":"",\n            "scriptLocation":"",\n            "status":"normal",\n            "subStatus":"",\n            "color":"",\n            "frequency":"1",\n            "order":"0",\n            "openedBy":"ut001214",\n            "openedDate":"2022-06-13 17:00:39",\n            "reviewedBy":"ut001214",\n            "reviewedDate":"2022-06-14",\n            "lastEditedBy":"ut001214",\n            "lastEditedDate":"2022-06-14 11:36:28",\n            "version":"2",\n            "linkCase":"",\n            "fromBug":"0",\n            "fromCaseID":"0",\n            "fromCaseVersion":"0",\n            "deleted":"0",\n            "lastRunner":"",\n            "lastRunDate":"0000-00-00 00:00:00",\n            "lastRunResult":"",\n            "baseline":"",\n            "important":"",\n            "execution":"",\n            "isAutomation":"",\n            "scenes":"default",\n            "responsible":"",\n            "storyTitle":"配置开机启动应用是否全屏运行",\n            "needconfirm":"false",\n            "bugs":0,\n            "results":0,\n            "caseFails":0,\n            "stepNumber":"4"\n        }\n    }\n}\n'})}),"\n",(0,c.jsxs)(e.p,{children:["​		通过以上 ",(0,c.jsx)(e.code,{children:"JSON"})," 数据可以看出，爬取的用例信息较为完整，已全面覆盖自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件字段，并且其他更加丰富的信息可以用作用例正确性检查。"]}),"\n",(0,c.jsx)(e.p,{children:"​		根据项目实际情况调研，一共制定了以下用例检测的错误类型："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:'        # 错误检查类型\n        local_error_1 = "E1. [L1]等级用例未标记[acp]标签"\n        local_error_2 = "E2. [core/smoke]标记用例未标记[acp]标签"\n        local_error_3 = "E3. [auto_id]标签用例PMS字段设置错误:执行方式/是否实现自动化"\n        local_error_4 = "E4. PMS用例状态未审核通过，无法关联测试单"\n        local_error_5 = "E5. 已实现自动化，但执行方式 != 自动执行"\n        local_error_6 = "E6. 已实现自动化，但标题缺少[auto_id]标签"\n        local_error_7 = "E7. Auto工程本地csv文件不存在该用例id"\n        local_error_8 = "E8. CSV用例id标签在PMS不存在"\n'})}),"\n",(0,c.jsx)(e.p,{children:"​		根据上文制定的错误类型设计不同的判断条件，如下方部分代码："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'local_error_mes = ""\n\nif local_auto_pri == "L1" and local_auto_source is None:\n    local_error_mes = local_error_mes + local_error_1 + "\\n"\n    \nif local_auto_label is not None and local_auto_source is None:\n    local_error_mes = local_error_mes + local_error_2 + "\\n"\n    \nif local_auto_id_list[0] != 0 and (local_case_execution != "自动执行" or local_case_auto != "是"):\n    local_error_mes = local_error_mes + local_error_3 + "\\n"\n    \nif local_case_status != "正常":\n    local_error_mes = local_error_mes + local_error_4 + "\\n"\n    \nif local_case_auto == "是" and local_auto_id_list[0] == 0:\n    local_error_mes = local_error_mes + local_error_5 + "\\n"\n    \nif local_case_auto == "是" and local_case_execution != "自动执行":\n    local_error_mes = local_error_mes + local_error_6 + "\\n"\n'})}),"\n",(0,c.jsxs)(e.p,{children:["​		通过以上代码可看出，每解析一条用例就能通过用例的各个字段对用例进行检测，当存在异常时输出对应错误项文案至列：",(0,c.jsx)(e.code,{children:"检测异常"}),"，用于辅助后续的 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据修改。"]}),"\n",(0,c.jsxs)(e.h4,{id:"422-数据同步",children:["4.2.2 数据同步",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#422-数据同步",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		使用 ",(0,c.jsx)(e.code,{children:"pandas"})," 对 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据数据做进一步处理，并进行数据比对与同步："]}),"\n",(0,c.jsxs)(e.h5,{id:"4221-pms数据处理",children:["4.2.2.1 PMS数据处理",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4221-pms数据处理",children:"#"})]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["把从标题中提取出的自动化用例 ",(0,c.jsx)(e.code,{children:"id"})," 设置为索引。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["根据索引列进行排序，基于配置文件中权重 ",(0,c.jsx)(e.code,{children:"csv_crawler_sort = 用例id,用例等级"})," ，优先基于用例 ",(0,c.jsx)(e.code,{children:"id"})," 升序排列，用例 ",(0,c.jsx)(e.code,{children:"id"})," 相同时则基于用例等级做二次升序排序。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'df.sort_values(by=self.ini_cf["csv_control"]["csv_crawler_sort"].split(","), inplace=True)\n'})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["基于索引列去重，仅保留排序在前的用例行数据（此处理是因为目前自动化测试用例存在关联多条 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例的情况，",(0,c.jsx)(e.code,{children:"CSV"})," 文件保留优先级高的用例数据作为同步对象）。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["基于配置项 ",(0,c.jsx)(e.code,{children:"ecsv_local_update"}),"  提取 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例数据为 ",(0,c.jsx)(e.code,{children:"DataFram"})," 类型的二维数据表。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​	二维数据表输出："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"/usr/bin/python3.7 /home/mars/Desktop/test_demo/pandas.py\n\n     用例id 用例等级   用例标签  用例来源 持续集成       跳过原因     确认跳过\n0       1     L1      core     acp1   CRP             NaN        NaN\n1       2     L1      smoke    acp1   CRP             NaN        NaN\n2       3     L2      core     acp1   CRP             NaN        NaN\n3       4     L3      core     acp1   CRP             NaN        NaN\n4       5     L1      smoke    acp1   CRP             NaN        NaN\n..     ...   ...      ...      ...    ...             ...        ...\n407   427     L3      core     acp1   CRP       skip-方法有误     NaN\n408   428     L2      core     acp1   CRP       skip-方法有误     NaN\n409   429     L3      core     acp1   CRP       skip-方法有误     NaN\n410   450     L2      core     acp1   CRP             NaN        NaN\n411   460     L2      core     acp1   CRP       skip-方法有误     NaN\n\n[412 rows x 7 columns]\n"})}),"\n",(0,c.jsxs)(e.h5,{id:"4222-本地-csv-文件备份",children:["4.2.2.2 本地 CSV 文件备份",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4222-本地-csv-文件备份",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		备份本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件，以便于数据回溯与回滚，备份过程当中发现 ",(0,c.jsx)(e.code,{children:"csv"})," 文件存在格式错误与用例 ",(0,c.jsx)(e.code,{children:"id"})," 编号类型不一致的问题（ ",(0,c.jsx)(e.code,{children:"int"})," / ",(0,c.jsx)(e.code,{children:"float"})," ），所以这里增加了格式检测与数据类型统一的处理，实现代码如下："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:'\n	......\n    \n					# 检测csv文件内容格式\n                    self.__run_node_log(\n                        "[project_data_backup]backup",\n                        f"原始csv数据-id数据类型检测: {local_csv_init_filename}",\n                    )\n                    if backup_df[self.csv_dataframe_index].dtypes == "float64":\n                        self.__run_node_log(\n                            "[project_data_backup]backup",\n                            f"原始csv数据-id数据类型转换-浮点转整形, 另存文件{local_csv_init_filename}",\n                        )\n                        df1 = (\n                            backup_df.dropna(axis=0, subset=[self.csv_dataframe_index])\n                            .drop_duplicates(subset=self.csv_dataframe_index)\n                            .reset_index(drop=True)\n                        )\n                        df1[self.csv_dataframe_index] = df1[\n                            self.csv_dataframe_index\n                        ].astype(int)\n                        df1.to_csv(local_csv_to_backup_path, index=False)\n                    elif backup_df[self.csv_dataframe_index].dtypes == "object":\n                        self.__run_node_log(\n                            "[project_data_backup]backup",\n                            f"原始csv数据-id数据类型报错-存在字符串, 跳过该文件处理{local_csv_init_filename}",\n                        )\n                        self.skip_list.append(\n                            local_csv_init_filename + "(id类型!=int/float)"\n                        )\n                    elif backup_df[self.csv_dataframe_index].dtypes == "int64":\n                        self.__run_node_log(\n                            "[project_data_backup]backup",\n                            f"原始csv数据-id数据类型正确-int64, 另存文件{local_csv_init_filename}",\n                        )\n                        df1 = (\n                            backup_df.dropna(axis=0, subset=[self.csv_dataframe_index])\n                            .drop_duplicates(subset=self.csv_dataframe_index)\n                            .reset_index(drop=True)\n                        )\n                        df1.to_csv(local_csv_to_backup_path, index=False)\n                    else:\n                        e_type = backup_df[self.csv_dataframe_index].dtypes\n                        self.__run_node_log(\n                            "[project_data_backup]backup",\n                            f"原始csv数据-id数据类型报错-{e_type}, 跳过该文件处理{local_csv_init_filename}",\n                        )\n                        self.skip_list.append(\n                            local_csv_init_filename + "(id类型!=int/float)"\n                        )\n                except pd.errors.ParserError as p:\n                    # csv数据格式错误的文件处理\n                    self.skip_list.append(local_csv_init_filename + "(内容格式错误)")\n                    self.__error_mes(\n                        f"Warning: {local_csv_init_filename} - data format error, skip the process ！ "\n                    )\n                    self.__run_node_log(\n                        "[project_data_backup]backup",\n                        f"原始csv数据-内容格式错误-{repr(p)}, 跳过该文件处理 {local_csv_init_filename}",\n                        "error",\n                    )\n            else:\n                # 本地auto项目不存在备份文件处理\n                # 更新: 增加至跳过列表，不中断同步\n                self.__run_node_log(\n                    "[project_data_backup]backup",\n                    f"本地apps目录下不存在文件: {local_csv_init_filename}, 跳过该文件处理",\n                    "error",\n                )\n                self.skip_list.append(local_csv_init_filename + "(文件缺失)")\n'})}),"\n",(0,c.jsx)(e.p,{children:"​		通过以上代码完成了两个目的："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["检测 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件格式，若出现异常则跳过，并在终端给出提示，推动维护人员进行修改。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["检测 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件用例 ",(0,c.jsx)(e.code,{children:"id"})," 字段的数据类型，自动完成修改，达成文件标准统一化。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h5,{id:"4223-pms-数据与本地-csv-数据同步",children:["4.2.2.3 PMS 数据与本地 CSV 数据同步",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4223-pms-数据与本地-csv-数据同步",children:"#"})]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件数据提取为 ",(0,c.jsx)(e.code,{children:"DataFrame"})," 数据表，并与 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据设置相同列索引",(0,c.jsx)(e.code,{children:"用例id"}),"。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["基于本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 数据索引进行循环，同时获取两张数据表数据并进行需更新列的比对。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["同步对比不相等的值至本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件。"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​		部分代码如下："}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"# 循环索引数据处理\nfor local_crawler_index_num in range(local_df_crawler_end_index):\n    \n    # 更新数据\n    local_crawler_id_value = local_df_crawler_end.loc[local_crawler_index_num, self.csv_dataframe_index]\n    if local_crawler_id_value in local_update_id_list:\n        \n        # 比对数据行获取\n        local_tem_df1 = str(local_df_update.loc[local_df_update[self.csv_dataframe_index] == local_crawler_id_value, self.csv_update_list].to_string(index=False))\n        local_tem_df2 = str(local_df_crawler_end.loc[local_df_crawler_end[self.csv_dataframe_index] == local_crawler_id_value, self.csv_update_list].to_string(index=False))\n        \n        # 数据同步\n        if local_tem_df1 != local_tem_df2:\n            self.update_num += 1\n            local_df_update.loc[local_df_update[self.csv_dataframe_index] == local_crawler_id_value, self.csv_update_list] = local_df_crawler_end.loc[local_df_crawler_end[self.csv_dataframe_index] == local_crawler_id_value, self.csv_update_list].values\n"})}),"\n",(0,c.jsxs)(e.p,{children:["​		上方代码循环执行完毕后，代表本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件数据已经在本地同步完成。"]}),"\n",(0,c.jsxs)(e.h5,{id:"4224-完成数据同步",children:["4.2.2.4 完成数据同步",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4224-完成数据同步",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		提交 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件修改至云端仓库，完成最终的数据修改。"]}),"\n",(0,c.jsxs)(e.h4,{id:"423-pms数据修改",children:["4.2.3 PMS数据修改",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#423-pms数据修改",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		基于 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据的检测结果，参考用例对应的错误类型，进行 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据修改。由于在爬取的 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据中存在",(0,c.jsx)(e.code,{children:"PMS用例编号"})," 可轻松在 ",(0,c.jsx)(e.code,{children:"PMS"})," 上定位问题用例，根据项目情况选择 ",(0,c.jsx)(e.code,{children:"PMS"})," 批量上传修改或 ",(0,c.jsx)(e.code,{children:"PMS"})," 接口回填均可。"]}),"\n",(0,c.jsxs)(e.h4,{id:"424-任务结果收集",children:["4.2.4 任务结果收集",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#424-任务结果收集",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		任务完成后设计输出两类结果："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"提示性汇总结果：通过企业微信机器人实现，同步执行任务相关信息与结果，预期示例如下"}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"执行日期： 2022.06.13 15:34\n执行工程： app\n执行对象： music,draw\n执行状态： Successful\n更新数据： 68\n更新文件： music.csv\n保持文件： draw.csv\n失败文件： None\n异常节点： None"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"本地归档结果："}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"PMS爬取数据文件"}),"\n",(0,c.jsx)(e.p,{children:"自动化工程备份CSV文件"}),"\n",(0,c.jsx)(e.p,{children:"数据更新后CSV文件"}),"\n",(0,c.jsx)(e.p,{children:"程序运行日志"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h4,{id:"425-程序运行入口",children:["4.2.5 程序运行入口",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#425-程序运行入口",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		该工具暂命名为 ",(0,c.jsx)(e.code,{children:"pms_label_manage"})," ，根据程序功能设计运行参数为："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"amd@huanghaizhen:~$ python3 pms_label_manage.py -h\n\nusage: pms_label_manage [options]\n\nPMS用例数据处理工具: 爬取PMS用例数据, PMS用例错误检测, 备份本地CSV文件,同步PMS用例标签至本地CSV文件.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  \n  -p PROJECT, --project PROJECT\n                        应用项目: os(基于cd-uosdevice-os)/app(基于autotest-basic-frame)/other(扩展工程 - 后续自定义添加)\n\n  -o OPTION, --option OPTION\n                        应用选项: sync(爬取pms数据并同步至本地csv)/crawler(爬取pms数据)/backup(备份本地csv)\n                        \n  -a APPS, --apps APPS  应用范围: all(所有应用)/music(音乐)/draw...\n\n例如爬取音乐pms数据: python3 pms_label_manage.py -o crawler -p app -a music\n"})}),"\n",(0,c.jsx)(e.p,{children:"​		为了保证易用性，根据使用环境设计了两种启动方式："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"Shell"})," 脚本运行 （无需完成环境部署）- ",(0,c.jsx)(e.code,{children:"assist_tool.sh"}),"，命令行进行："]}),"\n",(0,c.jsxs)(e.li,{children:["命令行运行：",(0,c.jsx)(e.code,{children:"bash assist_tool.sh run"})," —— 【环境部署 + 以配置文件默认配置运行】。","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["交互式运行：",(0,c.jsx)(e.code,{children:"bash assist_tool.sh"}),"，展示菜单引导用户配置（图5）—— 【以用户选择引导菜单项运行】"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"Python"})," 脚本运行（已完成环境部署）- ",(0,c.jsx)(e.code,{children:"pms_label_manage.py"}),"，命令行进行："]}),"\n",(0,c.jsxs)(e.li,{children:["直接运行： ",(0,c.jsx)(e.code,{children:"python3 pms_label_manage.py"}),"  —— 【以配置文件默认配置运行】","\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["参数运行： ",(0,c.jsx)(e.code,{children:"python3 pms_label_manage.py -p app -o crawler -a music"}),"  —— 【以参数自定义运行】"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"https://wikidev.uniontech.com/images/d/de/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%BC%8F.png",alt:""})}),"\n",(0,c.jsxs)(e.h2,{id:"5-实验验证",children:["5 实验验证",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#5-实验验证",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		",(0,c.jsx)(e.strong,{children:"实验环境"})]}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"【硬件环境】\n设备架构：x86_64\n设备处理器：处理器 : Intel(R) Core(TM) i7-10700 CPU @ 2.90GHz (八核 / 十六逻辑处理器)\n主板 : B460M-HDV(RD)\n内存 : 8GB(TMKU8G68AHFHC-26V DDR4 2667MHz (0.4ns))\n存储设备 : ESO256GMFCH-E3C-2 (256 GB)/x796w (31.0 GB)/WDC WD10EZEX-08WN4A0 (1.00 TB)\n网络适配器 : Ethernet Connection (12) I219-V/Ethernet interface/Ethernet interface"}),"\n",(0,c.jsx)(e.p,{children:"【软件环境】\npandas版本：1.3.0\nPython版本：3.7"}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["​		",(0,c.jsx)(e.strong,{children:"实验流程"})]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E5%AE%9E%E9%AA%8C%E6%B5%81%E7%A8%8B.png",alt:""})}),"\n",(0,c.jsxs)(e.h3,{id:"51-任务启动",children:["5.1 任务启动",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#51-任务启动",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		以同步应用 ",(0,c.jsx)(e.code,{children:"deepin-music"})," 为例，执行环境部署与任务启动命令："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"$ bash assist_tool.sh setup\n$ python3 -p app -o music -a all\n"})}),"\n",(0,c.jsx)(e.p,{children:"​"}),"\n",(0,c.jsxs)(e.h3,{id:"52-任务完成",children:["5.2 任务完成",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#52-任务完成",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		等待任务完成，查看任务结果："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png",alt:""})}),"\n",(0,c.jsxs)(e.h3,{id:"53-查看用例检测结果",children:["5.3 查看用例检测结果",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#53-查看用例检测结果",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		任务执行结果归档文件中查看 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据检测结果："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E6%95%B0%E6%8D%AE%E6%A3%80%E6%B5%8B%E7%A4%BA%E4%BE%8B.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		进一步验证有效性，查看 ",(0,c.jsx)(e.code,{children:"PMS"})," 项目管理工具 ",(0,c.jsx)(e.code,{children:"WEB"})," 端数据，抽取",(0,c.jsx)(e.code,{children:"用例编号：635533"})," 用例进行验证："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		通过以上在线数据验证可看出，该用例",(0,c.jsx)(e.code,{children:"缺少[acp]标签"}),"且",(0,c.jsx)(e.code,{children:"用例状态非正常"}),"，与 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件中检查异常结果一致。"]}),"\n",(0,c.jsxs)(e.h3,{id:"54-数据备份与同步",children:["5.4 数据备份与同步",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#54-数据备份与同步",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		检查备份文件与同步更新后文件差异性："}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/%E6%96%87%E4%BB%B6%E6%9B%B4%E6%96%B0%E5%89%8D%E5%90%8E%E5%AF%B9%E6%AF%94.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		进一步验证有效性，查看 ",(0,c.jsx)(e.code,{children:"PMS"})," 项目管理工具 ",(0,c.jsx)(e.code,{children:"WEB"})," 端数据，抽取以上",(0,c.jsx)(e.code,{children:"323行 - 325行"})," 数据验证："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/PMS%E6%95%B0%E6%8D%AE.png",alt:""})}),"\n",(0,c.jsxs)(e.p,{children:["​		验证结果通过，可看到 ",(0,c.jsx)(e.code,{children:"PMS"})," 在线数据最新标签确认为 ",(0,c.jsx)(e.code,{children:"[smoke]"})," ，且本地 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件中替换",(0,c.jsx)(e.code,{children:"[core]"})," 标签正确。"]}),"\n",(0,c.jsxs)(e.h3,{id:"55-pms数据批量修改",children:["5.5 PMS数据批量修改",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#55-pms数据批量修改",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		本环节存在两种子方案："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["[1] ",(0,c.jsx)(e.code,{children:"PMS"})," 批量上传修改"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"[2] 通过用例编辑接口批量回填修改用例数据"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["​		因子方案[1]是手工+ ",(0,c.jsx)(e.code,{children:"PMS"})," 管理平台本身支持的功能，这里不再做验证。以下主要针对子方案[2]的可行性做验证，以下为利用 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例编辑接口回填的数据 ",(0,c.jsx)(e.code,{children:"DEMO"}),"："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"import requests\n\nlogin_url = \"https://pms.uniontech.com/user-login-Lw==.html?account=&password=\"\ncase_fix = \"https://pms.uniontech.com/testcase-edit-814409.html\"\n\ndata = {\n'title': f'[001]test_{time.strftime(\"%Y.%m.%d.%H.%M\", time.localtime())}',\n'steps[1]': 'test1',\n'stepType[1]': 'step',\n'expects[1]': 'test1',\n'files[]': '(binary)',\n'uid': '62a89acf7dd13',\n'product': '107',\n'branch': '0',\n'module': '33344',\n'type': 'feature',\n'scenes': 'default',\n'stage[]': 'feature',\n'pri': '3',\n'status': 'normal',\n'keywords': '4.0-beta'\n}\n\ns = requests.session()\n# 登陆\ns.get(url=login_url)\n# 编辑用例\ns.post(case_fix, data=data)\n\n# 打印修改内容与请求响应信息\nprint(\"fix:\\n\", f\"title: {data['title']}\\n\", f\"status: {data['status']}\\n\")\nprint(\"status_code:\", r1.status_code, \"\\nresponse:\", r1.text)\n"})}),"\n",(0,c.jsxs)(e.p,{children:["​		以上 ",(0,c.jsx)(e.code,{children:"DEMO"})," 主要针对 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例编号为814409的用例，收集 ",(0,c.jsx)(e.code,{children:"PMS"})," 该用例历史数据，运行 ",(0,c.jsx)(e.code,{children:"DEMO"}),"  ："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"$ python3 DEMO.py\n\nfix:\n title: [001]test_2022.06.15.09.07\n status: normal\n\nstatus_code: 200 \nresponse: <html><meta charset='utf-8'/><style>body{background:white}</style><script>parent.location='/testcase-view-814409.html';\n\n<\/script>\n"})}),"\n",(0,c.jsxs)(e.p,{children:["​		收集 ",(0,c.jsx)(e.code,{children:"PMS"})," 修改的新用例数据与历史数据做对比："]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"/%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A_assets/PMS%E7%94%A8%E4%BE%8B%E5%9B%9E%E5%A1%AB.png",alt:""})}),"\n",(0,c.jsx)(e.p,{children:"​		通过修改后数据可看出："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["标题内容修改成功，与运行 ",(0,c.jsx)(e.code,{children:"DEMO"})," 后打印的修改信息一致"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["用例状态修改成功，从",(0,c.jsx)(e.code,{children:"待评审"}),"扭转为",(0,c.jsx)(e.code,{children:"正常"})]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"修改历史记录时间验证，与标题时间一致"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h3,{id:"56-验证结果",children:["5.6 验证结果",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#56-验证结果",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		通过 5.1 - 5.7 小结的验证，可确认该方案可行性通过，同时简单计算效率提升，同样以音乐应用  +  ",(0,c.jsx)(e.code,{children:"PMS"})," 数据同步 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件场景为例："]}),"\n",(0,c.jsxs)(e.h4,{id:"561-历史方案耗时",children:["5.6.1 历史方案耗时",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#561-历史方案耗时",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		通过视频录制的方式采集耗时:"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["[1阶段] 获取 ",(0,c.jsx)(e.code,{children:"PMS"})," 数据，操作+浏览器响应耗时 -  30 秒："]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"启动浏览器 - 8秒。"}),"\n",(0,c.jsxs)(e.li,{children:["登录 ",(0,c.jsx)(e.code,{children:"PMS"})," - 切换项目至应用用例部分 - 15秒"]}),"\n",(0,c.jsx)(e.li,{children:"导出所有用例数据至本地  - 7秒。"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["[2阶段] 校验数据差异，并更新 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件耗时 - 20秒（数据需同步）/18秒（数据无需同步）："]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["同时打开 ",(0,c.jsx)(e.code,{children:"PMS"})," 导出文件与自动化 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件 - 6秒。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["按照 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件中用例id的值，在 ",(0,c.jsx)(e.code,{children:"PMS"})," 导出文件标题列进行查找 - 10秒"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["根据查找结果校验 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件对应用例数值是否一致："]}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"[2-1阶段] 存在差异则进行修改 - 4秒"}),"\n",(0,c.jsx)(e.li,{children:"[2-2阶段] 不存在差异略过 - 2秒"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"耗时计算："}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"目前音乐自动化-用例总数量：351\n目前音乐自动化-修改用例数量：64\n计算公式：[1阶段]耗时 + （用例总数量-修改用例数量）* [2阶段]数据无需同步耗时 + 修改用例数量* [2阶段]数据需同步耗时"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"计算耗时结果（秒）：30 + 5166 + 1280 = 6476"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h4,{id:"562-新方案耗时",children:["5.6.2 新方案耗时",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#562-新方案耗时",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		在任务 ",(0,c.jsx)(e.code,{children:"DEMO"})," 运行代码前后加上时间打印并运行："]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"$ python3 pms_label_manage.py -p app -o sync -a music\n\nstart time: 2022.06.15.10.00.03\n\n* {'music'} pms_data_crawler ...\n\n* {'music'} pms_data_crawler successfully !\n\n* {'music'} project_data_backup ...\n\n* {'music'} project_data_backup successfully !\n\n* {'music'} project_data_update successfully !\n\n* task successfully !\n\nend time: 2022.06.15.10.00.10\n"})}),"\n",(0,c.jsxs)(e.p,{children:["​		耗时计算公式：",(0,c.jsx)(e.code,{children:"end time - start time"}),"。"]}),"\n",(0,c.jsx)(e.p,{children:"​		计算耗时结果（秒）：10 - 3 = 7"}),"\n",(0,c.jsxs)(e.h4,{id:"563--耗时数据对比",children:["5.6.3  耗时数据对比",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#563--耗时数据对比",children:"#"})]}),"\n",(0,c.jsxs)(e.table,{children:["\n",(0,c.jsxs)(e.thead,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.th,{children:"历史方案耗时（秒）"}),"\n",(0,c.jsx)(e.th,{children:"新方案耗时（秒）"}),"\n",(0,c.jsx)(e.th,{children:"差异值（秒）"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.tbody,{children:["\n",(0,c.jsxs)(e.tr,{children:["\n",(0,c.jsx)(e.td,{children:"6476"}),"\n",(0,c.jsx)(e.td,{children:"7"}),"\n",(0,c.jsx)(e.td,{children:"6469"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"​		根据以上数据可看出，在效率上新方案超出历史方案很多，通过计算现计算具体数值："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["计算公式：",(0,c.jsx)(e.code,{children:"（历史方案耗时-新方案耗时）/新方案耗时"}),"。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"计算结果：（6476-7）/7 = 924.14。"}),"\n",(0,c.jsx)(e.p,{children:"通过以上公式得出最终结论，采用新方案比历史方案提升效率 924.14 倍。"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h3,{id:"57-稳定性验证",children:["5.7 稳定性验证",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#57-稳定性验证",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:"​		基于 5.1 - 5.4 章节主流程进行稳定性测试，连续运行30次之后对运行过程与结果进行验证，基于 5.1 - 5.4 章节描述的验证方法进行结果如下（因之前详细展示过验证方法与流程，此处仅展示结论）："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"运行过程：未出现报错。"}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"运行结果："}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"提醒数据：正常。"}),"\n",(0,c.jsx)(e.li,{children:"归档数据：正常"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"基于验证结果可得出结论，该方案运行较为稳定。"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h2,{id:"6-小结",children:["6 小结",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#6-小结",children:"#"})]}),"\n",(0,c.jsxs)(e.p,{children:["​		根据实验验证章节内容，可得出结论采用方案可行性通过。运行应用除了参数运行外还加入了 ",(0,c.jsx)(e.code,{children:"Shell"})," 可视化菜单，可根据提示运行，大大增加了易用性。除此之外在实验验证最后阶段，基于任务 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例数据同步至自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件，通过计算得出效率的提示在924倍左右，虽然仅使用音乐进行数据收集，但在其他应用上套用该计算公式同样适用。"]}),"\n",(0,c.jsxs)(e.p,{children:["​		结合项目实际情况与问题阶段提出的问题重要程度，目前优先解决 ",(0,c.jsx)(e.code,{children:"PMS"})," 与 ",(0,c.jsx)(e.code,{children:"CSV"})," 两端数据不匹配问题，也就是说只实现 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例数据同步至自动化工程 ",(0,c.jsx)(e.code,{children:"CSV"})," 文件部分功能，下一步演进项定为："]}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["解析 ",(0,c.jsx)(e.code,{children:"PMS"})," 检测异常用例数据，利用 ",(0,c.jsx)(e.code,{children:"PMS"})," 用例编辑接口进行内容回填，根据异常类型修改为正确数据。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsxs)(e.p,{children:["因考虑开发周期问题，选用了较为成熟的数据处理库 ",(0,c.jsx)(e.code,{children:"pandas"})," ，但该库体量较大，后续考虑基于",(0,c.jsx)(e.code,{children:"csv"})," 标准库重新实现应用功能，减少依赖。"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\n",(0,c.jsx)(e.p,{children:"后续建立类似定时任务/流水线的运行机制，周期性触发应用，达到持续保证用例数据质量的目的。"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.h2,{id:"7-参考资料",children:["7 参考资料",(0,c.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#7-参考资料",children:"#"})]}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://www.runoob.com/python3/python-urllib.html",target:"_blank",rel:"noopener noreferrer",children:"Urllib 标准库使用"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://www.runoob.com/pandas/pandas-tutorial.html",target:"_blank",rel:"noopener noreferrer",children:"Pandas 数据分析"})})]})}function d(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(r,{...n})}):r(n)}let i=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["tech_doc%2F%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94%2F%E3%80%8A%E9%92%88%E5%AF%B9PMS%E7%94%A8%E4%BE%8B%E6%95%B0%E6%8D%AE%E6%A3%80%E6%9F%A5%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E7%A8%8BCSV%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E7%9A%84%E6%96%B9%E6%B3%95%E3%80%8B%E8%B0%83%E7%A0%94%E6%8A%A5%E5%91%8A.md"]={toc:[{text:"1 相关术语",id:"1-相关术语",depth:2},{text:"2 问题",id:"2-问题",depth:2},{text:"2.1 问题背景",id:"21-问题背景",depth:3},{text:"2.2 问题详情",id:"22-问题详情",depth:3},{text:"3 现状",id:"3-现状",depth:2},{text:"3.1 方案描述",id:"31-方案描述",depth:3},{text:"3.2 方案对比",id:"32-方案对比",depth:3},{text:"3.3 对比结论",id:"33-对比结论",depth:3},{text:"4 技术方案",id:"4-技术方案",depth:2},{text:"4.1 整体设计",id:"41-整体设计",depth:3},{text:"4.2 关键技术",id:"42-关键技术",depth:3},{text:"4.2.1 数据爬取与检测",id:"421-数据爬取与检测",depth:4},{text:"4.2.2 数据同步",id:"422-数据同步",depth:4},{text:"4.2.3 PMS数据修改",id:"423-pms数据修改",depth:4},{text:"4.2.4 任务结果收集",id:"424-任务结果收集",depth:4},{text:"4.2.5 程序运行入口",id:"425-程序运行入口",depth:4},{text:"5 实验验证",id:"5-实验验证",depth:2},{text:"5.1 任务启动",id:"51-任务启动",depth:3},{text:"5.2 任务完成",id:"52-任务完成",depth:3},{text:"5.3 查看用例检测结果",id:"53-查看用例检测结果",depth:3},{text:"5.4 数据备份与同步",id:"54-数据备份与同步",depth:3},{text:"5.5 PMS数据批量修改",id:"55-pms数据批量修改",depth:3},{text:"5.6 验证结果",id:"56-验证结果",depth:3},{text:"5.6.1 历史方案耗时",id:"561-历史方案耗时",depth:4},{text:"5.6.2 新方案耗时",id:"562-新方案耗时",depth:4},{text:"5.6.3  耗时数据对比",id:"563--耗时数据对比",depth:4},{text:"5.7 稳定性验证",id:"57-稳定性验证",depth:3},{text:"6 小结",id:"6-小结",depth:2},{text:"7 参考资料",id:"7-参考资料",depth:2}],title:"针对PMS用例数据检查与自动化工程CSV文件数据同步的方法调研报告",headingTitle:"针对PMS用例数据检查与自动化工程CSV文件数据同步的方法调研报告",frontmatter:{Author:"海针"}}}}]);