"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7218"],{700:function(e,n,s){s.r(n),s.d(n,{default:()=>a});var t=s(2676),d=s(453);function r(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,d.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"unittest3小时入门版",children:["unittest—3小时入门版",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#unittest3小时入门版",children:"#"})]}),"\n",(0,t.jsxs)(n.h2,{id:"简介",children:["简介",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#简介",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"unittest"})," 是 Python 标准库提供的一个测试框架，有点是简单方便，语言能力强的可以对其进行二次开发，使其在单元测试、接口测试领域应用广泛；"]}),"\n",(0,t.jsx)(n.p,{children:"由一个或多个自动化测试基础模块、自动化测试管理模块、自动化测试统计模块等组成的工具集合。"}),"\n",(0,t.jsxs)(n.h2,{id:"unittest实例",children:["unittest实例",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#unittest实例",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import unittest\n\nclass MytestA(unittest.TestCase):\n    \n    @classmethod\n    def setUpClass(cls):\n    	print("--- 我是setUpClass ----")\n        \n    def setUp(self):\n    	print("我是setup")\n        \n    def test_a(self):\n    	print("------- A ----------")\n        \n    def test_b(self):\n    	print("------- B ---------")\n        \n    def tearDown(self):\n    	print("我是teardown")\n        \n    @classmethod\n    def tearDownClass(cls):\n    	print("-------我是tearDownClass-------")\n\nif __name__ == \'__main__\':\n	unittest.main()\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"重要概念",children:["重要概念",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#重要概念",children:"#"})]}),"\n",(0,t.jsxs)(n.h3,{id:"test-case",children:["Test Case",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#test-case",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["一个测试用例，就是一个完整的单元，包含了 ",(0,t.jsx)(n.code,{children:"setUp"}),"、",(0,t.jsx)(n.code,{children:"run"}),"、",(0,t.jsx)(n.code,{children:"tearDown"}),"；"]}),"\n",(0,t.jsxs)(n.h3,{id:"test-suite",children:["Test Suite",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#test-suite",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["测试集，用来组装测试用例，通过 ",(0,t.jsx)(n.code,{children:"addTest"})," 加载的 ",(0,t.jsx)(n.code,{children:"TestCase"})," 的 ",(0,t.jsx)(n.code,{children:"Testsuite"})," 中，返回一个 ",(0,t.jsx)(n.code,{children:"TestSuite"})," 实例；"]}),"\n",(0,t.jsxs)(n.h3,{id:"test-runner",children:["Test Runner",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#test-runner",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["执行，",(0,t.jsx)(n.code,{children:"TestTestRunner"})," 类提供的run()方法来执行；"]}),"\n",(0,t.jsxs)(n.h3,{id:"test-fixture",children:["Test Fixture",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#test-fixture",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["环境修复，",(0,t.jsx)(n.code,{children:"setUp"})," 和 ",(0,t.jsx)(n.code,{children:"tearDown"}),"；"]}),"\n",(0,t.jsxs)(n.h2,{id:"测试用例组织",children:["测试用例组织",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试用例组织",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"获取不同模块下的所有用例；"}),"\n",(0,t.jsxs)(n.h3,{id:"testsuite",children:[(0,t.jsx)(n.code,{children:"TestSuite"}),(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#testsuite",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["创建测试集  ",(0,t.jsx)(n.code,{children:"testSuite"}),"："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"suite = unittest.TestSuite()  \n"})}),"\n",(0,t.jsx)(n.p,{children:"添加用例到测试集中："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'suite.addTest(test_login.TestCrmLogin("test_login"))   \nsuite.addTest(test_ex.TestEx("test_a"))\n'})}),"\n",(0,t.jsx)(n.p,{children:"执行测试集："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"runner = unittest.TextTestRunner()\nrunner.run(suite)\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"discover-方法",children:[(0,t.jsx)(n.code,{children:"discover"})," 方法",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#discover-方法",children:"#"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'#创建测试集\ndiscover = unittest.defaultTestLoader.discover("cases",pattern="*.py")\n#执行测试集并生成测试报告\nwith open("xxx.html",\'wd\') as f:\n    # 使用三方库HTMLTestRunner执行\n    runner = HTMLTestRunner.HTMLTestRunner(stream=f,title="测试登录",description="描述信息")\n    runner.run(discover)\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"断言",children:["断言",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#断言",children:"#"})]}),"\n",(0,t.jsx)(n.p,{children:"每个用例当中都需要断言"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import unittest\n\nclass MyTest(unittest.TestCase):\n    \n    def test_01(self):\n        ...\n        username_ele = self.driver.find_element(By.NAME."admin")\n        self.assertEqual("username",username_ele,"message")\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"参数化",children:["参数化",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参数化",children:"#"})]}),"\n",(0,t.jsxs)(n.p,{children:["1.安装 ",(0,t.jsx)(n.code,{children:"ddt"}),"（数据驱动测试）："]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pip install ddt\n"})}),"\n",(0,t.jsx)(n.p,{children:"2.使用方法"}),"\n",(0,t.jsx)(n.p,{children:"① 单个参数"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import ddt\n\n@ddt.ddt\nclass TestCrmLogin(unittest.TestCase):\n    \n    @ddt.data("admin","a")\n    def test_ddt(self,username)\n        print(username)\n'})}),"\n",(0,t.jsx)(n.p,{children:'备注：@ddt.data("admin","a")，括号里面有几个元素就会跑几遍'}),"\n",(0,t.jsx)(n.p,{children:"② 多个参数"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'import ddt\n\n@ddt.ddt\nclass TestCrmLogin(unittest.TestCase):\n    \n    @ddt.data(("a","admin123")，("admin","admin"))\n    @ddt.unpack\n    def test_ddt(self,username,password)\n    	print(username,password)\n'})}),"\n",(0,t.jsxs)(n.h2,{id:"page-object",children:["Page Object",(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#page-object",children:"#"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Page Object是一种自动化测试思想，其理念是将页面的交互细节封装起来，使用例更关注业务而非界面细节，从而提高测试案例的可读性，提高项目的可维护性。"}),"\n",(0,t.jsxs)(n.li,{children:["规范项目文件夹：\n① ",(0,t.jsx)(n.code,{children:"driver"})," 驱动文件，用户存放浏览器驱动文件等；\n② ",(0,t.jsx)(n.code,{children:"model"})," 函数文件夹，启动浏览器等；\n③ ",(0,t.jsx)(n.code,{children:"page"})," 页面文件夹，所有的基类（定位器、找元素）；\n④ ",(0,t.jsx)(n.code,{children:"testcase"})," 测试用例，用例的基类；\n⑤ 存放测试报告，截图等测试结果文件；"]}),"\n",(0,t.jsx)(n.li,{children:"一个页面一个类，一个元素一个方法。"}),"\n"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}let a=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["%E8%87%AA%E5%8A%A8%E5%8C%96%E6%8A%80%E6%9C%AF%2F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%2Funittest%E2%80%943%E5%B0%8F%E6%97%B6%E5%85%A5%E9%97%A8%E7%89%88.md"]={toc:[{text:"简介",id:"简介",depth:2},{text:"unittest实例",id:"unittest实例",depth:2},{text:"重要概念",id:"重要概念",depth:2},{text:"Test Case",id:"test-case",depth:3},{text:"Test Suite",id:"test-suite",depth:3},{text:"Test Runner",id:"test-runner",depth:3},{text:"Test Fixture",id:"test-fixture",depth:3},{text:"测试用例组织",id:"测试用例组织",depth:2},{text:"`TestSuite`",id:"testsuite",depth:3},{text:"`discover` 方法",id:"discover-方法",depth:3},{text:"断言",id:"断言",depth:2},{text:"参数化",id:"参数化",depth:2},{text:"Page Object",id:"page-object",depth:2}],title:"unittest—3小时入门版",headingTitle:"unittest—3小时入门版",frontmatter:{Author:"mikigo"}}}}]);