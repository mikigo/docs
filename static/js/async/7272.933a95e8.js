"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7272"],{3227:function(e,r,n){n.r(r),n.d(r,{default:()=>c});var i=n(2676),s=n(453);function t(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",img:"img",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.h1,{id:"pageobjectspo",children:["PageObjects（PO）",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#pageobjectspo",children:"#"})]}),"\n",(0,i.jsxs)(r.h2,{id:"po是什么",children:["PO是什么",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#po是什么",children:"#"})]}),"\n",(0,i.jsxs)(r.p,{children:["PageObjects 又称 PO 设计模式，以下简称 PO，通常翻译过来叫",(0,i.jsx)(r.code,{children:"页面对象设计模式"}),"，是一种 UI 自动化测试领域流行的设计模式。"]}),"\n",(0,i.jsxs)(r.p,{children:["在圈内流行起来主要源于 Web UI 自动化测试领域的明星级项目 Selenium，在 Selenium 官方文档 ",(0,i.jsx)(r.code,{children:"最佳实践 - 指南"})," 中描述了 PO 设计模式；"]}),"\n",(0,i.jsxs)(r.p,{children:["但实际早在 2013 年国外有个哥们儿 ",(0,i.jsx)(r.code,{children:"Martin Fowler"})," 在他的",(0,i.jsx)(r.a,{href:"https://martinfowler.com/bliki/PageObject.html#footnote-panel-object",target:"_blank",rel:"noopener noreferrer",children:"博客"}),"里就提到了 PO 设计模式，Selenium 官方 2015 年对其做了进一步诠释；"]}),"\n",(0,i.jsx)(r.p,{children:"有了 Selenium 的官方背书，这种设计模式迅速在圈内流行起来，几乎是每个自动化测试工程师必备技能。"}),"\n",(0,i.jsxs)(r.h2,{id:"po设计思想",children:["PO设计思想",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#po设计思想",children:"#"})]}),"\n",(0,i.jsx)(r.p,{children:"其设计思想简单讲就是，将一个页面中元素操作方法封装为一个页面类，测试用例中涉及到与这些元素交互时，调用页面类里面的方法即可。"}),"\n",(0,i.jsx)(r.p,{children:"这样做可以减少重复代码，并且当 UI 界面改变时，只需要修改一个地方。"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{src:"/pageobjects_assets/1.png",alt:""})}),"\n",(0,i.jsxs)(r.h2,{id:"po实现",children:["PO实现",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#po实现",children:"#"})]}),"\n",(0,i.jsx)(r.p,{children:"下面以在百度搜索一个东西举例，写一个线性脚本："}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\n# 设置Chrome选项，例如无头模式\nchrome_options = Options()\nchrome_options.add_argument('--headless')\n\n# 创建Chrome实例，并指定ChromeDriver路径\nservice = Service('path/to/chromedriver')\ndriver = webdriver.Chrome(service=service, options=chrome_options)\n\n# 打开百度首页\ndriver.get('https://www.baidu.com')\n\n# 定位搜索输入框并输入搜索关键字\nsearch_box = driver.find_element(By.ID, 'kw')\nsearch_box.send_keys('Selenium')\n\n# 定位搜索按钮并点击\nsearch_button = driver.find_element(By.ID, 'su')\nsearch_button.click()\n\n# 等待搜索结果加载完成\nWebDriverWait(driver, 10).until(\n    EC.presence_of_element_located((By.ID, 'content_left'))\n)\n\n# 提取搜索结果（例如，第一条结果的标题和链接）\nsearch_results = driver.find_elements(By.CLASS_NAME, 't')\nfirst_result = search_results[0]\ntitle = first_result.find_element(By.CLASS_NAME, 't a').text\nlink = first_result.find_element(By.CLASS_NAME, 't a').get_attribute('href')\n\n# 输出搜索结果\nprint(f'标题： {title}')\nprint(f'链接： {link}')\n\n# 将提取的数据保存到文件或数据库中\n# ...\n# 关闭浏览器\ndriver.quit()\n"})}),"\n",(0,i.jsx)(r.p,{children:"脚本看起来很好理解，不用过多解释对吧。"}),"\n",(0,i.jsx)(r.p,{children:"那现在你可以想象一下，如果所有用例都这样写，是不是会存在一个问题，就是当页面中某个元素发生改变时，你需要到你所有的脚本中去修改。"}),"\n",(0,i.jsx)(r.p,{children:"这茫茫多的脚本，得改到什么时候。。"}),"\n",(0,i.jsx)(r.p,{children:"所以这就说到 PageObjects 的理念，需要将每一步操作封装成一个方法，这些方法统一放到一个页面类（Page Class）里面。"}),"\n",(0,i.jsxs)(r.p,{children:["首先我们写一个页面基类 ",(0,i.jsx)(r.code,{children:"BasePage"})," 来处理通用页面行为，如打开页面和等待页面加载完成："]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nimport time\n\nclass BasePage:\n    \n    def __init__(self, driver):\n        self.driver = driver\n        \n    def open(self, url):\n        self.driver.get(url)\n        \n    def wait_for_element_to_be_present(self, locator, timeout=10):\n        WebDriverWait(self.driver, timeout).until(\n            EC.presence_of_element_located(locator)\n        )\n        \n    def wait_for_element_to_be_clickable(self, locator, timeout=10):\n        WebDriverWait(self.driver, timeout).until(\n            EC.element_to_be_clickable(locator)\n        )\n"})}),"\n",(0,i.jsxs)(r.p,{children:["然后，为百度搜索页面创建一个专门的类 ",(0,i.jsx)(r.code,{children:"BaiduSearchPage"}),"："]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"class BaiduSearchPage(BasePage):\n    \n    def __init__(self, driver):\n        super().__init__(driver)\n        self.search_url = 'https://www.baidu.com'\n        \n    def search(self, keyword):\n        self.open(self.search_url)\n        self.wait_for_element_to_be_present((By.ID, 'kw'))\n        search_box = self.driver.find_element(By.ID, 'kw')\n        search_box.send_keys(keyword)\n        search_button = self.driver.find_element(By.ID, 'su')\n        search_button.click()\n        self.wait_for_element_to_be_present((By.ID, 'content_left'))\n"})}),"\n",(0,i.jsxs)(r.p,{children:["最后，创建一个主类 ",(0,i.jsx)(r.code,{children:"SearchScript"})," 来执行搜索并处理结果："]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"class SearchScript:\n    \n    def __init__(self, driver):\n        self.driver = driver\n        self.search_page = BaiduSearchPage(driver)\n        \n    def run_search(self, keyword):\n        self.search_page.search(keyword)\n        search_results = self.driver.find_elements(By.CLASS_NAME, 't')\n        first_result = search_results[0]\n        title = first_result.find_element(By.CLASS_NAME, 't a').text\n        link = first_result.find_element(By.CLASS_NAME, 't a').get_attribute('href')\n        print(f'标题： {title}')\n        print(f'链接： {link}')\n        \n"})}),"\n",(0,i.jsx)(r.p,{children:"你看，经过一顿操作，方法封装好之后再写脚本就方便许多了："}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-python",children:"# 创建浏览器实例，并指定ChromeDriver路径\nservice = Service('path/to/chromedriver')\ndriver = webdriver.Chrome(service=service)\n\n# 创建SearchScript实例\nsearch_script = SearchScript(driver)\n\n# 执行搜索\nsearch_script.run_search('Selenium')\n\n# 关闭浏览器\ndriver.quit()\n"})}),"\n",(0,i.jsx)(r.p,{children:"用例里面只需要调用方法即可，而方法是可以复用的，如果某个元素发生改变，你只需要修改方法里面这一个地方就可以；"}),"\n",(0,i.jsx)(r.p,{children:"而且你有没有发现，封装之后，用例脚本看起来更容易理解，可读性更好。"}),"\n",(0,i.jsxs)(r.h2,{id:"总结",children:["总结",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,i.jsxs)(r.h3,{id:"核心理念",children:["核心理念",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#核心理念",children:"#"})]}),"\n",(0,i.jsx)(r.p,{children:"一个页面一个类，一个元素一个方法。"}),"\n",(0,i.jsxs)(r.h3,{id:"使用po的好处",children:["使用PO的好处",(0,i.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#使用po的好处",children:"#"})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"提高脚本可维护性，某个元素改变只需要修改一个地方；"}),"\n",(0,i.jsx)(r.li,{children:"提高脚本可读性，用例层和方法层各司其职，用例层主要关注用例逻辑（业务场景），方法层主要关注元素操作。"}),"\n"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,s.ah)(),e.components);return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}let c=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["autotest%2F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%80%9D%E6%83%B3%E7%90%86%E5%BF%B5%2FPageObjects.md"]={toc:[{text:"PO是什么",id:"po是什么",depth:2},{text:"PO设计思想",id:"po设计思想",depth:2},{text:"PO实现",id:"po实现",depth:2},{text:"总结",id:"总结",depth:2},{text:"核心理念",id:"核心理念",depth:3},{text:"使用PO的好处",id:"使用po的好处",depth:3}],title:"PageObjects（PO）",headingTitle:"PageObjects（PO）",frontmatter:{Author:"mikigo"}}}}]);