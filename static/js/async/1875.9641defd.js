"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1875"],{5832:function(n,e,r){r.r(e),r.d(e,{default:()=>h});var s=r(2676),i=r(453);function d(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",h3:"h3",strong:"strong",p:"p",pre:"pre",code:"code",ul:"ul",li:"li",h4:"h4",ol:"ol"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"python基础语法8小时入门版",children:["Python基础语法—8小时入门版",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#python基础语法8小时入门版",children:"#"})]}),"\n",(0,s.jsxs)(e.h2,{id:"一python基础",children:["一、Python基础",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一python基础",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一输入输出",children:[(0,s.jsx)(e.strong,{children:"（一）输入输出"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一输入输出",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"1. print"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'（1）print("hello world") 括号表示调用函数print，括号内的字符串用引号引起来。\n\n（2）print("hello","world","mikigo") 可接受多个参数。\n\n（3）print(name）不加引号表示调用变量。\n\n（4）print(100+200) 不加引号，表示直接运算。\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"2. input"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'（1）input() 输入，光标会等待键盘输入。\n\n（2）input("请输入内容") 括号内建议输入提示信息。\n\n（3）input 输入的值都会被当成字符串，包括数字。\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"二数据类型",children:[(0,s.jsx)(e.strong,{children:"（二）数据类型"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二数据类型",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"1. 整数 int 没有小数点。\n\n2. 浮点数 float ：有小数点。\n\n3. 布尔值 bool ：True 或 False 。注意首字母大写。\n\n4. 空值 None :空值，但和0有区别。\n\n5. type() 查看数据类型（isinstance）。\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"三变量表达式",children:[(0,s.jsx)(e.strong,{children:"（三）变量、表达式"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三变量表达式",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"1. 变量赋值"})}),"\n",(0,s.jsxs)(e.p,{children:["（1）",(0,s.jsx)(e.code,{children:'name="mikigo"'})," 表示将 ",(0,s.jsx)(e.code,{children:"mikigo"})," 这个字符串赋值给变量 ",(0,s.jsx)(e.code,{children:"name"}),"，注意要加引号，不加引号会被认为是一个变量"]}),"\n",(0,s.jsx)(e.p,{children:"（2）a,b,c=7,8,9 多元赋值，表示将值一一对应的复制到等号前面的变量，但位置的个数一定要一致。"}),"\n",(0,s.jsx)(e.p,{children:"（3）数据类型的转换"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:" - str(age) 表示将变量age转换成字符型\n\n - int（1.5）表示将float转换成int（取整为1）\n\n - float(6) 表示将int转换成float\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"2. 表达式"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"（1）+ - * /\n\n（2）% 表示取余数\n\n（3）// 表示取商数\n\n（4）** 表示次幂 ，比如10**5 表示10的5次幂\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"四字符串-string",children:[(0,s.jsx)(e.strong,{children:"（四）字符串 string"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#四字符串-string",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"1.格式化字符串"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'（1）%d（data） 表示数字站位\n\n（2）%s（string） 表示对字符串站位\n\n（3）%r 任何类型都可以接收，但字符串最终打印出来有引号。\n\n（4）格式：print("%s = %d" % （age,19）)\n\n（5）"mikigo{}".format(("good",))\n\n（6）f"mikigo{good}"\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"2.字符串操作"})}),"\n",(0,s.jsxs)(e.p,{children:["（1）字符串相加，比如：",(0,s.jsx)(e.code,{children:'"mi" + "ki" > miki'}),"；"]}),"\n",(0,s.jsxs)(e.p,{children:["（2）星号相乘，比如：",(0,s.jsx)(e.code,{children:'2 * "mi" > mimi'}),"；"]}),"\n",(0,s.jsxs)(e.p,{children:["（3）",(0,s.jsx)(e.code,{children:"[ ]"})," 表示通过索引截取字符，第 1 个字符索引是 0 ；"]}),"\n",(0,s.jsxs)(e.p,{children:["（4）",(0,s.jsx)(e.code,{children:"[ : ]"})," 表示截取字符串 比如：",(0,s.jsx)(e.code,{children:"[2:4]"})," 表示从索引 2 开始，截取到索引 3（不包含 4 ）；"]}),"\n",(0,s.jsxs)(e.p,{children:["（5）in 表示 in 后面字符串中是否包含 in 前面的字符，比如：",(0,s.jsx)(e.code,{children:'"i" in "miki"  >> True；'})]}),"\n",(0,s.jsx)(e.p,{children:"（6）not in 用法与 in 类似但是取反；"}),"\n",(0,s.jsxs)(e.p,{children:["（7）r/R 表示所有字符都按照字面意思来使用。比如：",(0,s.jsx)(e.code,{children:'print(r"hello\\nmikigo")'})," 换行字符 \\n 不起作用，直接输入引号内的字符串。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"3.字符串的常见函数方法"})}),"\n",(0,s.jsx)(e.p,{children:"（1）len(str) 返回字符串的长度；"}),"\n",(0,s.jsx)(e.p,{children:"（2）count 计数；"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- "mikigo".count("mi") 直接跟字符或字符串，则返回字符出现的次数。\n\n- "mikigo".count("i",2,10) 表示在索引2到10之间（不包含10），返回字符出现的次数。\n'})}),"\n",(0,s.jsx)(e.p,{children:"（3）startswith 或 endswith 以什么开始或以什么结束；"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- "mikigo".startswith("m") 表示判断是否以字符m开始，> True\n\n- "mikigo".endswith("m") 表示判断是否以字符m结束，> False\n'})}),"\n",(0,s.jsx)(e.p,{children:"（4）find 查找字符或字符串，返回索引位置，如果找不到会返回 -1；"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- "mikigo".find("i") 表示找出字符i在字符串中第一次出现的索引位置，> 1\n\n- "mikigo".rfind("i") 表示从右开始找出字符i在字符串中第一次出现的索引位置，> 3\n'})}),"\n",(0,s.jsx)(e.p,{children:"（5）index 用法同 find，区别在于，找不到时会报错；"}),"\n",(0,s.jsx)(e.p,{children:"（6）strip 删除或截掉；"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- " mikigo ".strip() 删除前后的空格\n\n- " mikigo ".rstrip("o") 删除右边的字符o\n\n- " mikigo ".lstrip("m") 删除左边的字符m\n'})}),"\n",(0,s.jsx)(e.p,{children:"（7）replace 替换"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- "mikigo".replace("i","oo") 表示将字符串中的所有字符i替换称字符串oo\n\n- "mikigo".replace("i","oo",1) 表示将字符串中的字符i替换为oo，只替换一次\n'})}),"\n",(0,s.jsxs)(e.p,{children:["（8）join 加入：",(0,s.jsx)(e.code,{children:'"miki".join("ab")  >> "amikib"'})," 每个字符拆开，加入某个字符或字符串。"]}),"\n",(0,s.jsx)(e.p,{children:"（9）split 以分隔符截取"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'- "mikigo".split("i") 表示以字符i作为分隔符，将字符串进行分隔。\n\n- "mikigo".split("i",1) 表示以字符i作为分隔符，以第1个i作为字符串的分隔符 进行分隔。\n\n- "mikigo\\nhello".splitlines() 或  "mikigo\\nhello".splitlines(keepends=False) 表示按行（"\\r","\\n","\\r\\n"）分隔（不包含换行符）。\n\n- "mikigo\\nhello".splitlines(keepends=True) 表示以\\n换行，且包含换行符。\n\n- 扩展: 多种方式分割字符串  re.split(\'a|b\', \'fdasfweqgasfewaq\')\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"五列表list",children:[(0,s.jsx)(e.strong,{children:"（五）列表（list）"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#五列表list",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"1.list基本操作"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"（1）列表（list）用[ ]表示，是有序，可变，可指定位置取值的。\n\n（2）列表里面的元素，可以是任意数据类型，包括列表、None、bool\n\n（3）同一列表中可存放不同的数据类型\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"2.切片"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"（1）lst[index] 取单个元素，直接跟索引。比如 lst[2]，表示取索引 2 的元素；\n\n（2）lst[0:2] 取一个区间。表示取索引 0 到 1 的元素；\n\n（3）lst[0:5:2] 表示按步长 2 去取索引 0 到 4 之间的元素；\n\n（4）lst[-1] 表示取最后一个；\n\n（5）lst[::-1] 表示将一个列表反向排序。\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"3.list常见的函数和方法"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"（1）函数"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:"1）len(list) 列表的长度，即列表中元素的个数；\n\n2）max(list) 相同的数据类型取最大值。\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"（2）方法"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'1）list.append(obj) 在列表末尾添加新的对象。list.append("ab"),表示在末尾加入字符串 "ab"，但 append 一次只能增加一个元素；\n\n2）list.count(obj) 统计某个元素在列表中出现的次数；\n\n3）list.extend(seq) 在末尾追加另一个序列。追加的是一个列表，不能是单个元素。比如 list.extend([123])；\n\n4）list.index(obj) 找出某个元素的第一个索引位置；\n\n5）list.insert(index,obj) 将对象插入到列表（位置，元素）；\n\n6）list.pop(index) 删除某个位置的元素（默认删除最后一个）。比如 list.pop(1) 表示删除索引1的元素，且返回元素的值；\n\n7）list.remove(obj) 删除列表中的某个元素的第一个，修改列表本身；\n\n8）list.reverse() 反向排序；\n\n9）list.sort() 重新排序；\n\n10）list.clear() 清空列表；\n\n11）list.copy() 复制列表。\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"六元组tuple",children:[(0,s.jsx)(e.strong,{children:"（六）元组（tuple）"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#六元组tuple",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"定义：以小括号括起来的有序列表，但不能修改。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"a = (2,3,4,5)\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"七字典dict",children:[(0,s.jsx)(e.strong,{children:"（七）字典（dict）"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#七字典dict",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1.定义：字典是用大括号括起来，由键值对（key:value）组成的，且是无序的。"}),"\n",(0,s.jsx)(e.p,{children:"2.key 是唯一的，一般赋值为 string，value 可以是任意数据类型"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"3.常用操作"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'（1）dt["key"] 根据键读取值\n\n（2）dt["old_key"]="new_value" 根据键修改值\n\n（3）dt["new_key"]="new_value" 新增键值对\n\n（4）len(dt) 返回元素的量（键值对）\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"4.dict常用方法"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'（1）key in dict 判断键是否在字典中\n\n（2）dict.items() 返回列表，列表由元组组成，每个元组由一个键值对将键和值拆分为两个字符串组成。\n\n（3）dict.keys() 将所有的键组成一个列表。\n\n（4）dict.values() 将所有的值组成一个列表。\n\n（5）dict1.update(dict2) 将字典2中的键值对添加到字典1中\n\n（6）dict.get(key,default=None) 返回指定键的值，如果值不存在，返回default值。比如：dict.get("name","peter") 如果字典中有name这个键，则直接返回其对应的值，如果没有这个键，则返回"peter"\n\n（7）dict.setdefault(key,default=None) 和get一样会返回指定键的值，但若键不在字典中，会添加成为新的键值对。比如：dict.setdefault("name","peter")，如果字典中有name这个键，则返回其对应的值，如果没有，则会将定义的值，添加到字典中。\n\n（8）dict.pop(key,default=None) 删除键对应的值，key不存在返回default值。\n\n（9）dict.copy() 浅复制\n\n（10）dict.clear() 清除所有元素\n'})}),"\n",(0,s.jsxs)(e.h2,{id:"二过程控制",children:[(0,s.jsx)(e.strong,{children:"二、过程控制"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二过程控制",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一条件语句",children:[(0,s.jsx)(e.strong,{children:"（一）条件语句"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一条件语句",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1.句式："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'if 条件判断：（缩进和冒号）\n    print("字符串")\nelse:\n    print("字符串")\n'})}),"\n",(0,s.jsx)(e.p,{children:"2.else 可以不要，语法上没有问题"}),"\n",(0,s.jsx)(e.p,{children:"3.运算符"}),"\n",(0,s.jsxs)(e.p,{children:["(1)  ",(0,s.jsx)(e.code,{children:"< , <= , > , >= , == , !="})]}),"\n",(0,s.jsxs)(e.p,{children:["(2）",(0,s.jsx)(e.code,{children:"and , or , not , in , not in, is"})]}),"\n",(0,s.jsxs)(e.h3,{id:"二循环语句",children:[(0,s.jsx)(e.strong,{children:"（二）循环语句"}),(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二循环语句",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1.while"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"while 判断条件：\n    语句\nelse ：\n    语句\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"break 终止循环语句\n\ncontinue 结束本次循环，继续进行下一轮循环。\n"})}),"\n",(0,s.jsx)(e.p,{children:"2.for语句（遍历序列的元素）"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"for i in [1,2,3,4]：\n    print(i)\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"in 后面可以跟元组、列表、字符串，但跟字典时只能取到字典中的键（key）。"}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"range(函数)"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"range(3) 表示从索引0，取到索引2（开区间）"}),"\n",(0,s.jsx)(e.li,{children:"range(1,4) 表示从索引1，取到索引3"}),"\n",(0,s.jsx)(e.li,{children:"range(1,10,2) 表示从索引1，取到索引10，步长为2"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h2,{id:"三函数",children:["三、函数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三函数",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一定义",children:["（一）定义",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一定义",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"函数是可重复使用的，具有一定功能的代码段。"}),"\n",(0,s.jsx)(e.p,{children:"def 函数名（参数1，参数2，\xb7\xb7\xb7\xb7）"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def add(a,b):\n  c = a + b\n  print(c)\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"二返回值",children:["（二）返回值",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二返回值",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"调用函数后，将执行结果返回给调用者。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def add(a,b):\n    c = a + b\n    return c\n"})}),"\n",(0,s.jsx)(e.p,{children:">>x=add(1,2)  # 返回一个c的值赋给x，如果返回值有多个，而变量只有1个，则会生成一个元组。也可以用多个变量对应多个返回值，即多元赋值。"}),"\n",(0,s.jsxs)(e.h3,{id:"三参数",children:["（三）参数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三参数",children:"#"})]}),"\n",(0,s.jsxs)(e.h4,{id:"1位置参数形参",children:["1、位置参数(形参)",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1位置参数形参",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def func(name, age):\n    print(name, age)\n"})}),"\n",(0,s.jsx)(e.p,{children:"位置参数时根据位置顺序传入函数，调用函数时必须与定义时的参数数量一致。"}),"\n",(0,s.jsxs)(e.h4,{id:"2默认参数",children:["2、默认参数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2默认参数",children:"#"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:'def func(name, age=18):      print("a未被定义")  # 参数在定义的时候就赋值的'}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"默认参数在调用的时候如果不传入，则会使用默认参数，如果给传递了参数，则值会被覆盖。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h4,{id:"3可变参数",children:["3、可变参数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3可变参数",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def func(*args):\n    sum = 0\n    for n in args:\n        sum = sum + n\n        return sum\n"})}),"\n",(0,s.jsx)(e.p,{children:">>func(1,2,3,\xb7\xb7\xb7)  传入的参数数量可变，会自动组装称一个元组，如果传入0个参数，结果时返回一个空元组。"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"如果传入的参数是一个元组，调用的时候在函数括号内加*号（参数解构）"}),"\n",(0,s.jsx)(e.p,{children:"tp=（1，2，3，4）"}),"\n",(0,s.jsx)(e.p,{children:"resule = add(*tp)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h4,{id:"4关键字参数键和值",children:["4、关键字参数（键和值）",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4关键字参数键和值",children:"#"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def func(**kwargs):\n    print(kwargs)\n"})}),"\n",(0,s.jsxs)(e.p,{children:[">>",(0,s.jsx)(e.code,{children:'func(name="peter") '})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsx)(e.p,{children:"如果传入的参数是一个字典，调用的时候在函数括号内加**"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:'dct = {"eat1":"酸辣粉","eat2":"螺狮粉"}\n\nfunc(**dct)\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.h4,{id:"5组合参数",children:["5、组合参数",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#5组合参数",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["顺序为",(0,s.jsx)(e.strong,{children:"位置参数，可变参数，默认参数，关键字参数"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def func(name, age, *args, gender=’男’, **kwargs)\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"四类class",children:["四、类（class）",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#四类class",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一类的实例",children:["（一）类的实例",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一类的实例",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1.类的实例是对象，一个实例包含属性（有什么）和方法（能做什么）。"}),"\n",(0,s.jsx)(e.p,{children:"2.类的声明：class 类名():  类名单词首字母大写，如果是多个单词，单词与单词之间不空格，直接挨着写，但每个单词首字母需要大写。"}),"\n",(0,s.jsx)(e.p,{children:"3.定义类的属性和方法"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'class Person():\n\n    def __init__ (self, name, age):\n        self.name = name\n        self.age = age\n        \n    def run(self, food):\n        print("%s都%d岁了,天天吃%s" % （self.name, self.age,food）)\n'})}),"\n",(0,s.jsx)(e.p,{children:"（2）方法调方法或方法调属性等，内部调用都要加self。  ②"}),"\n",(0,s.jsx)(e.p,{children:"（3）调用外部变量时，不加self。"}),"\n",(0,s.jsx)(e.p,{children:"（4）调用"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'① 实例化：x = Person("peter",18)\n\n② print(x.name) 调用类的属性\n\n③ print(x.run("肉"))\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"二继承",children:["（二）继承",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二继承",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"子类继承父类的属性和方法"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Student(Person):  #继承时括号内直接写父类的类名\n    pass #完全继承父类的属性和方法。\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"class Student(Person):\n\n    def __init__(self,name,age,cno)\n        Person.__init__(self,name,age)  \n        self.cno = cno #在父类的基础上新增属性，需要先将父类指定进来。否则新增属性会将父类的属性覆盖。\n        \n    def run(self):\n        r = Person.run(self)\n        return r  # 在父类的基础上新增方法，需要先指定父类的方法。\n"})}),"\n",(0,s.jsx)(e.p,{children:"方法重新定义后，调用的时候，默认先去调用子类的方法，然后再去调用父类的方法。"}),"\n",(0,s.jsxs)(e.h3,{id:"三访问限制",children:["（三）访问限制",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三访问限制",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1．访问限制可以使，类内部的属性和方法，不能外部随便访问。用法是在属性或方法前面加双下划线，表示私有属性。"}),"\n",(0,s.jsx)(e.p,{children:"2．访问限制，不能被外部随便访问，但可以被内部调用，私有属性可以用方法调用，私有方法，可以定义其他方法调用。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'class Person():\n    def  __init__(self,name):\n        self.__name = name\n        \n    def  __eat(self,food):\n        return "%s爱上吃%s"% (self.__name,food)\n'})}),"\n",(0,s.jsxs)(e.h3,{id:"四编码规范",children:["（四）编码规范",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#四编码规范",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"1．缩进，4个空格的缩进，空格和tab不能混用（tab仅在编辑器中可使用）。"}),"\n",(0,s.jsx)(e.p,{children:"2．类名的单词以大写字母开头。"}),"\n",(0,s.jsx)(e.p,{children:"3．函数和类的属性命名以小写，用下划线连接"}),"\n",(0,s.jsx)(e.p,{children:"4．所有的命名都应采用有意义的英文单词，多单词由下划线连接。"}),"\n",(0,s.jsxs)(e.h2,{id:"五模块",children:["五、模块",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#五模块",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一引入模块",children:["（一）引入模块",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一引入模块",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"（1）import 后面直接跟模块名或类或函数。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import time\n"})}),"\n",(0,s.jsx)(e.p,{children:"（2）from 路径 import 类或函数 #路径最好用绝对路径。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"from model.A import add\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"二安装三方库",children:["（二）安装三方库",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二安装三方库",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"（1）sudo pip3  install  pymysql(三方库名)  # 在命令行直接输入即可。"}),"\n",(0,s.jsx)(e.p,{children:"（2）在 pycharm 里面，点击 file，选择 setting，选择 Project，选择 Project Interpreter，在右上角点 + 号，输入库名即可安装。"}),"\n",(0,s.jsx)(e.p,{children:"（3）如果是需要下载的三方库，下载后查看文件包里面的 readme 文件，根据描述进行安装。"}),"\n",(0,s.jsxs)(e.h2,{id:"六异常处理",children:["六、异常处理",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#六异常处理",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一try语句",children:["（一）try语句",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一try语句",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"（1）try ... except...except 表示当程序运行错误后，被 except 捕捉到，返回一个可定义的信息，且不会影响后续语句的执行。每个 except 后面跟不同的返回信息。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:'try:\n    print(a)\n    10/0\nexcept NameError:\n    print("a未被定义")\nexcept ....\n'})}),"\n",(0,s.jsxs)(e.p,{children:["（2）try ...except...finally 同（1）一样，但 ",(0,s.jsx)(e.strong,{children:"finally"})," 后的语句，无论是否发生异常，都会执行。"]}),"\n",(0,s.jsx)(e.p,{children:"（3）try...except...else 同（1）一样，但 **else ** 后的语句，是在没有发生异常的情况才会执行。"}),"\n",(0,s.jsxs)(e.h3,{id:"二抛出异常",children:["（二）抛出异常",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二抛出异常",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:'① raise NameError("这是一个名称错误")'}),"\n",(0,s.jsxs)(e.h3,{id:"三常见的异常",children:["（三）常见的异常",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三常见的异常",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"① AssertionError  assert（断言）语句失败。"}),"\n",(0,s.jsx)(e.p,{children:"② AttributeError 试图访问一个对象没有的属性，比如foo.x，但是foo没有x这个属性。"}),"\n",(0,s.jsx)(e.p,{children:"③ IOError 输入/输出异常，基本上是无法打开文件。"}),"\n",(0,s.jsx)(e.p,{children:"④ ImportError 无法引入模块或者包，基本上是路径问题。"}),"\n",(0,s.jsx)(e.p,{children:"⑤ IndentationError 语法错误，代码没有正确对齐。"}),"\n",(0,s.jsx)(e.p,{children:"⑥ IndexError 下标索引超出序列边界，比如当x只有三个元素，却试图访问x[5]。"}),"\n",(0,s.jsx)(e.p,{children:"⑦ KeyError 试图访问字典里不存在的键。"}),"\n",(0,s.jsx)(e.p,{children:"⑧ Kerboardinterrupt  Ctrl+C被按下，主要针对无限循环。"}),"\n",(0,s.jsx)(e.p,{children:"⑨ NameError 使用一个还未被赋值予对象的变量。"}),"\n",(0,s.jsx)(e.p,{children:"⑩ SyntaxError 代码非法，代码不能解释。"}),"\n",(0,s.jsx)(e.p,{children:"⑪ TypeError 传入对象类型与要求的不符。"}),"\n",(0,s.jsx)(e.p,{children:"⑫ UnboundLocalError 试图访问一个还未被设置的局部变量，基本上是由于另一个同名的全局变量，导致你以为正在访问它。"}),"\n",(0,s.jsx)(e.p,{children:"⑬ ValueError 传入一个调用者不期望的值，即使值的类型是正确的。"}),"\n",(0,s.jsx)(e.p,{children:"⑭ FileNotFoundError 试图打开一个不存在的文件或目录。"}),"\n",(0,s.jsxs)(e.h2,{id:"七文件读写",children:["七、文件读写",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#七文件读写",children:"#"})]}),"\n",(0,s.jsxs)(e.h3,{id:"一以读的形式打开并能写r",children:["（一）以读的形式打开，并能写（r+）",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#一以读的形式打开并能写r",children:"#"})]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:'>> f = open("test.txt","r+")\n>> f.write("xxx")\n>> f.flush()\n>> f.close()\n'})}),"\n",(0,s.jsx)(e.p,{children:"2.光标会放在文件开头，输入的输入会覆盖开头"}),"\n",(0,s.jsxs)(e.h3,{id:"二以写的形式打开并能读w",children:["（二）以写的形式打开，并能读(w+)",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#二以写的形式打开并能读w",children:"#"})]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:'>> f = open("test.txt","w+")\n>> data = f.read()\n>> print(date)\n'})}),"\n",(0,s.jsx)(e.p,{children:"2.若文件已存在会将其覆盖，若文件不存在，会新建文件。"}),"\n",(0,s.jsxs)(e.h3,{id:"三追加模式a",children:["（三）追加模式（a+）",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#三追加模式a",children:"#"})]}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-console",children:'>> f = open("test.txt","a+")\n'})}),"\n",(0,s.jsx)(e.p,{children:"2.光标在文件的末尾，写入会追加到末尾，若文件不存在，会新建文件。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'with open("test.txt","a+",encoding="utf-8") as f:\n    f.write("我是中文")\n    f.flush()\n'})})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["program%2FPython%2FPython%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E2%80%948%E5%B0%8F%E6%97%B6%E5%85%A5%E9%97%A8%E7%89%88.md"]={toc:[{text:"一、Python基础",id:"一python基础",depth:2},{text:"**（一）输入输出**",id:"一输入输出",depth:3},{text:"**（二）数据类型**",id:"二数据类型",depth:3},{text:"**（三）变量、表达式**",id:"三变量表达式",depth:3},{text:"**（四）字符串 string**",id:"四字符串-string",depth:3},{text:"**（五）列表（list）**",id:"五列表list",depth:3},{text:"**（六）元组（tuple）**",id:"六元组tuple",depth:3},{text:"**（七）字典（dict）**",id:"七字典dict",depth:3},{text:"**二、过程控制**",id:"二过程控制",depth:2},{text:"**（一）条件语句**",id:"一条件语句",depth:3},{text:"**（二）循环语句**",id:"二循环语句",depth:3},{text:"三、函数",id:"三函数",depth:2},{text:"（一）定义",id:"一定义",depth:3},{text:"（二）返回值",id:"二返回值",depth:3},{text:"（三）参数",id:"三参数",depth:3},{text:"1、位置参数(形参)",id:"1位置参数形参",depth:4},{text:"2、默认参数",id:"2默认参数",depth:4},{text:"3、可变参数",id:"3可变参数",depth:4},{text:"4、关键字参数（键和值）",id:"4关键字参数键和值",depth:4},{text:"5、组合参数",id:"5组合参数",depth:4},{text:"四、类（class）",id:"四类class",depth:2},{text:"（一）类的实例",id:"一类的实例",depth:3},{text:"（二）继承",id:"二继承",depth:3},{text:"（三）访问限制",id:"三访问限制",depth:3},{text:"（四）编码规范",id:"四编码规范",depth:3},{text:"五、模块",id:"五模块",depth:2},{text:"（一）引入模块",id:"一引入模块",depth:3},{text:"（二）安装三方库",id:"二安装三方库",depth:3},{text:"六、异常处理",id:"六异常处理",depth:2},{text:"（一）try语句",id:"一try语句",depth:3},{text:"（二）抛出异常",id:"二抛出异常",depth:3},{text:"（三）常见的异常",id:"三常见的异常",depth:3},{text:"七、文件读写",id:"七文件读写",depth:2},{text:"（一）以读的形式打开，并能写（r+）",id:"一以读的形式打开并能写r",depth:3},{text:"（二）以写的形式打开，并能读(w+)",id:"二以写的形式打开并能读w",depth:3},{text:"（三）追加模式（a+）",id:"三追加模式a",depth:3}],title:"Python基础语法—8小时入门版",headingTitle:"Python基础语法—8小时入门版",frontmatter:{Author:"mikigo"}}}}]);