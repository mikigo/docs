"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["1951"],{5674:function(e,n,r){r.r(n),r.d(n,{default:()=>i});var s=r(2676),t=r(453);function h(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",h3:"h3",h4:"h4",pre:"pre",code:"code",blockquote:"blockquote",h5:"h5"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"测开前端学习基础分享",children:["测开前端学习基础分享",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测开前端学习基础分享",children:"#"})]}),"\n",(0,s.jsxs)(n.h2,{id:"基础部分",children:["基础部分",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#基础部分",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://tdoc.uniontech.com/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%89%8D%E5%90%8E%E7%AB%AF/%E5%89%8D%E7%AB%AF/html%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer",children:"html"}),"，",(0,s.jsx)(n.a,{href:"https://tdoc.uniontech.com/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%89%8D%E5%90%8E%E7%AB%AF/%E5%89%8D%E7%AB%AF/CSS%20%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer",children:"css"}),"，",(0,s.jsx)(n.a,{href:"https://tdoc.uniontech.com/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%89%8D%E5%90%8E%E7%AB%AF/%E5%89%8D%E7%AB%AF/JS%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer",children:"javascript"})]}),"\n",(0,s.jsxs)(n.h2,{id:"ts-与-js",children:["TS 与 JS",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#ts-与-js",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"TS是JS的一个超集，支持静态类型检查。"}),"\n",(0,s.jsxs)(n.h2,{id:"调试工具按f12打开浏览器的调试工具",children:["调试工具（按F12打开浏览器的调试工具）",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调试工具按f12打开浏览器的调试工具",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"元素",children:["元素",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#元素",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"展示页面元素（html）\n页面样式（css）"}),"\n",(0,s.jsxs)(n.h3,{id:"源代码",children:["源代码",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#源代码",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"展示页面使用的动态脚本（js）"}),"\n",(0,s.jsxs)(n.h3,{id:"控制台",children:["控制台",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#控制台",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"展示脚本执行的日志\n执行调试脚本"}),"\n",(0,s.jsxs)(n.h3,{id:"网络",children:["网络",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#网络",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"展示页面需要的网络调用（接口信息、资源获取信息，包括响应信息和标头）"}),"\n",(0,s.jsxs)(n.h3,{id:"应用",children:["应用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#应用",children:"#"})]}),"\n",(0,s.jsxs)(n.h4,{id:"存储",children:["存储",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#存储",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"展示本地存储和会话存储、cookie、缓存等"}),"\n",(0,s.jsxs)(n.h2,{id:"学习vue",children:["学习VUE",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#学习vue",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://tdoc.uniontech.com/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%89%8D%E5%90%8E%E7%AB%AF/%E5%89%8D%E7%AB%AF/Vue%E5%9F%BA%E7%A1%80.html",target:"_blank",rel:"noopener noreferrer",children:"VUE基础"})}),"\n",(0,s.jsxs)(n.h3,{id:"快速开始",children:["快速开始",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#快速开始",children:"#"})]}),"\n",(0,s.jsxs)(n.h4,{id:"创建项目",children:["创建项目",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#创建项目",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"npm create vue@latest"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm create vue@latest\nNeed to install the following packages:\ncreate-vue@3.12.1\nOk to proceed? (y) y\n\nVue.js - The Progressive JavaScript Framework\n\n✔ 请输入项目名称： … test_frontend\n✔ 是否使用 TypeScript 语法？ … 否 / 是\n✔ 是否启用 JSX 支持？ … 否 / 是\n✔ 是否引入 Vue Router 进行单页面应用开发？ … 否 / 是\n✔ 是否引入 Pinia 用于状态管理？ … 否 / 是\n✔ 是否引入 Vitest 用于单元测试？ … 否 / 是\n✔ 是否要引入一款端到端（End to End）测试工具？ › 不需要\n✔ 是否引入 ESLint 用于代码质量检测？ › 否\n\n正在初始化项目 /home/lufei/Develop/sample/test_frontend...\n\n项目初始化完成，可执行以下命令：\n\n  cd test_frontend\n  npm install\n  npm run dev\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"启动项目",children:["启动项目",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#启动项目",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# ...  按新建项目时提示的命令启动即可\n\n➜  Local:   http://localhost:5173/\n➜  Network: use --host to expose\n\n# ...\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"访问前端",children:["访问前端",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#访问前端",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"通过启动项目提示的访问链接，即可打开项目首页"}),"\n",(0,s.jsxs)(n.h4,{id:"编译和部署",children:["编译和部署",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#编译和部署",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"vue代码需要编译成 js，css，html 才能被浏览器解析或执行"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"npm run dev"})," 可以访问是因为 npm 对 vue 代码进行了动态实时转化，您也因此可以在开发中动态修改代码"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"npm run build\n## 编译命令会生成一个`dist`目录，您可以通过web服务器，将dist目录服务给您的用户\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"项目目录说明",children:["项目目录说明",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#项目目录说明",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"├── dist                                          # 编译生成的静态代码和js文件\n│   ├── assets\n│   ├── favicon.ico\n│   └── index.html\n├── index.html                            # 项目首页，用户的访问将从这里开始\n├── jsconfig.json                        # 代码配置文件，保存js相关配置，例如导入路径\n├── node_modules                   # npm install 安装的依赖组件或代码\n│   ├── ...\n│   ├── vite-plugin-vue-inspector\n│   ├── @vue\n│   ├── vue\n│   └── ...                                        # 实际还会有 vue 和 vite 等其他一些依赖组件\n├── package.json                        # 记录包的元信息\n├── package-lock.json    # 记录包的详细信息，锁定包版本\n├── public    # 公共资源目录，可以通过 /public URL 直接访问\n│   └── favicon.ico\n├── README.md\n├── src     # vue 源代码目录\n│   ├── App.vue\n│   ├── assets\n│   ├── components\n│   └── main.js\n└── vite.config.js     # vite 配置文件，您可以在这里配置开发服务等\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"vite 是一个 vue 的打包工具，它提供了 vue 的开发服务（npm run dev）和包的编译功能（npm run build）"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"开始-vue-代码",children:["开始 VUE 代码",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#开始-vue-代码",children:"#"})]}),"\n",(0,s.jsxs)(n.h4,{id:"从mainjs开始",children:["从",(0,s.jsx)(n.code,{children:"main.js"}),"开始",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#从mainjs开始",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["使用 ",(0,s.jsx)(n.code,{children:"npm create vue@latest"})," 生成的项目，会从 ",(0,s.jsx)(n.code,{children:"main.js"})," 开始执行 vue 代码。"]}),"\n",(0,s.jsx)(n.p,{children:"新建、挂载应用"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"import { createApp } from 'vue'\nimport App from './App.vue'\ncreateApp(App).mount('#app')\n"})}),"\n",(0,s.jsx)(n.p,{children:"模块导入"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'## 你需要全局处理的内容，可以放在这里\n## 导入样式\nimport \'./assets/main.css\'\n\n## 导入组件\nimport ElementPlus from "element-plus";\nimport TestComponent from "./components/TestComponent.vue";\n\n## 注册组件\napp.use(ElementPlus)\napp.component("testComponent", TestComponent)\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"组件",children:["组件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"组件，在用户端，可以理解为一个页面，一个页面可以由1个根组件和多个子组件组成。"}),"\n",(0,s.jsxs)(n.h5,{id:"组件代码",children:["组件代码",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件代码",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"组件代码主要包括3个部分：模板（template）、脚本（script，和模板至少有1个）、样式（style，可选）"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<script>\n// 脚本内容，使用 js/ts 语法，除了 js 逻辑，可以实现 vue 的绑定、响应、生命周期等功能\n<\/script>\n<template>\n// 模板内容， 使用 html 语法，可以使用 vue 指令，实现条件、循环等渲染功能\n</template>\n<style>\n// 样式，使用 css 语法，可以使用 vue 组件中的变量值\n</style>\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"使用组件",children:["使用组件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#使用组件",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<script setup>\n// 导入组件\nimport TestComponent from "./components/TestComponent.vue"\n<\/script>\n<template>\n     \x3c!-- 使用组件 --\x3e\n    <TestComponent />\n</template>\n'})}),"\n",(0,s.jsxs)(n.h5,{id:"组件引用",children:["组件引用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件引用",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"可以在父组件中，引用子组件，使用子组件暴露的对象(变量、方法)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<script setup>\nimport {ref} from "vue"\nimport TestComponent from "./components/TestComponent.vue"\nconst testRef = ref(null)\n// 使用 testRef 即可引用组件\nconsole.log("sayHi in TestComponent:", testRef.sayHi())\n<\/script>\n<template>\n    <TestComponent ref="testRef" />\n</template>\n'})}),"\n",(0,s.jsxs)(n.h5,{id:"组件-props",children:["组件 Props",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件-props",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Props 可以理解为组件的属性，可以在使用组件的时候，传入 props"}),"\n",(0,s.jsx)(n.p,{children:"子组件 components/TestComponent.vue 内容："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<script setup>\nconst props = defineProps(['name'])\n<\/script>\n<template>\n      <div>{{ name }}<div>\n</template>\n"})}),"\n",(0,s.jsx)(n.p,{children:"在父组件 App.vue 中使用组件："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<template>\n     <TestComponent name="test1" />\n</template>\n<script setup>\nimport TestComponent from "./components/TestComponent.vue"\n<\/script>\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"属性透传：如果自组件未定义 props，但是父组件传递了属性，子组件会将属性传递给自身的子节点。"}),"\n"]}),"\n",(0,s.jsxs)(n.h5,{id:"组件-slots",children:["组件 Slots",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#组件-slots",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"slots 为组件插槽，用来为组件传递模板内容"}),"\n",(0,s.jsx)(n.p,{children:"子组件TestComponent"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<template>\n<div>\n<slot>\n\x3c!-- 这里可以定义插槽的默认内容 --\x3e\n</slot>\n</div>\n</template>\n"})}),"\n",(0,s.jsx)(n.p,{children:"父组件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<template>\n<TestComponent>\n\x3c!-- 父组件传递的插槽内容 --\x3e\n</TestComponent>\n</template>\n<script setup>\nimport TestComponent from "./components/TestComponent.vue"\n<\/script>\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["具名插槽：当需要多个插槽时，可以使用",(0,s.jsx)(n.code,{children:"<slot>"}),"的",(0,s.jsx)(n.code,{children:"name"}),"属性指定插槽，而在父组件中，使用 ",(0,s.jsx)(n.code,{children:"v-slot:<name>"})," 为指定的插槽传递内容"]}),"\n"]}),"\n",(0,s.jsxs)(n.h5,{id:"事件",children:["事件",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#事件",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"子组件可以注册事件，并被父组件捕获并响应。"}),"\n",(0,s.jsx)(n.p,{children:"子组件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"<script setup>\nconst emit = defineEmits(['refresh'])\n\nfunction buttonClick() {\n   // 触发事件\n  emit('refresh')\n}\n<\/script>\n"})}),"\n",(0,s.jsx)(n.p,{children:"父组件"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'<script setup>\nimport TestComponent from "./components/TestComponent.vue"\n// 父组件的事件处理函数\nfunction onChileRefresh() {\n     console.log("child refreshed")\n}\n<\/script>\n<template>\n<TestComponent @refresh="onChileRefresh" />\n</template>\n'})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}let i=d;d.__RSPRESS_PAGE_META={},d.__RSPRESS_PAGE_META["program%2F%E5%89%8D%E5%90%8E%E7%AB%AF%2F%E6%B5%8B%E5%BC%80%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%88%86%E4%BA%AB.md"]={toc:[{text:"基础部分",id:"基础部分",depth:2},{text:"TS 与 JS",id:"ts-与-js",depth:2},{text:"调试工具（按F12打开浏览器的调试工具）",id:"调试工具按f12打开浏览器的调试工具",depth:2},{text:"元素",id:"元素",depth:3},{text:"源代码",id:"源代码",depth:3},{text:"控制台",id:"控制台",depth:3},{text:"网络",id:"网络",depth:3},{text:"应用",id:"应用",depth:3},{text:"存储",id:"存储",depth:4},{text:"学习VUE",id:"学习vue",depth:2},{text:"快速开始",id:"快速开始",depth:3},{text:"创建项目",id:"创建项目",depth:4},{text:"启动项目",id:"启动项目",depth:4},{text:"访问前端",id:"访问前端",depth:4},{text:"编译和部署",id:"编译和部署",depth:4},{text:"项目目录说明",id:"项目目录说明",depth:4},{text:"开始 VUE 代码",id:"开始-vue-代码",depth:3},{text:"从`main.js`开始",id:"从mainjs开始",depth:4},{text:"组件",id:"组件",depth:4}],title:"测开前端学习基础分享",headingTitle:"测开前端学习基础分享",frontmatter:{Author:"路斐"}}}}]);