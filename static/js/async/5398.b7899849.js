"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5398"],{5015:function(n,e,s){s.r(e),s.d(e,{default:()=>o});var i=s(2676),r=s(453);function c(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code",p:"p"},(0,r.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"nginx入门使用",children:["Nginx入门使用",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#nginx入门使用",children:"#"})]}),"\n",(0,i.jsxs)(e.h2,{id:"安装",children:["安装",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#安装",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"sudo apt install nginx\n"})}),"\n",(0,i.jsxs)(e.p,{children:["安装之后 ",(0,i.jsx)(e.code,{children:"/var/www/html"})," 就可以作为默认的 ",(0,i.jsx)(e.code,{children:"http"})," 服务使用了；"]}),"\n",(0,i.jsxs)(e.h2,{id:"配置",children:["配置",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#配置",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:["配置文件路径：",(0,i.jsx)(e.code,{children:"/etc/nginx/nginx.conf"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"sudo vim /etc/nginx/nginx.conf\n"})}),"\n",(0,i.jsx)(e.p,{children:"默认配置如下："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"# 全局配置\nuser mikigo;\nworker_processes auto;\npid /run/nginx.pid;\ninclude /etc/nginx/modules-enabled/*.conf;\n\n# events配置\nevents {\n        worker_connections 768;\n        # multi_accept on;\n}\n\n# http配置\nhttp {\n		# http全局配置\n        ##\n        # Basic Settings\n        ##\n\n        sendfile on;\n        tcp_nopush on;\n        tcp_nodelay on;\n        keepalive_timeout 65;\n        types_hash_max_size 2048;\n        # server_tokens off;\n\n        # server_names_hash_bucket_size 64;\n        # server_name_in_redirect off;\n\n        include /etc/nginx/mime.types;\n        default_type application/octet-stream;\n\n        ##\n        # SSL Settings\n        ##\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n        ssl_prefer_server_ciphers on;\n\n        ##\n        # Logging Settings\n        ##\n\n        access_log /var/log/nginx/access.log;\n        error_log /var/log/nginx/error.log;\n\n        ##\n        # Gzip Settings\n        ##\n\n        gzip on;\n\n        # gzip_vary on;\n        # gzip_proxied any;\n        # gzip_comp_level 6;\n        # gzip_buffers 16 8k;\n        # gzip_http_version 1.1;\n        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\n        ##\n        # Virtual Host Configs\n        ##\n\n        include /etc/nginx/conf.d/*.conf;\n        include /etc/nginx/sites-enabled/*;\n        \n        autoindex on;\n        autoindex_exact_size on;\n        autoindex_localtime on;\n        charset utf-8;\n        # server配置，可以有多个server\n        server {\n                listen          8001;\n                server_name     localhost;\n\n                location / {\n                        root /home/mikigo/Desktop/share;\n                        index index.html;\n                }\n        }\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["一共由三部分组成，分别为 全局配置、",(0,i.jsx)(e.code,{children:"events"}),"  配置和 ",(0,i.jsx)(e.code,{children:"http"})," 配置；"]}),"\n",(0,i.jsxs)(e.p,{children:["在 ",(0,i.jsx)(e.code,{children:"http"})," 中，又包含 ",(0,i.jsx)(e.code,{children:"http"})," 全局配置、多个 ",(0,i.jsx)(e.code,{children:"server"})," 配置，每个 ",(0,i.jsx)(e.code,{children:"server"})," 中，可以包含 ",(0,i.jsx)(e.code,{children:"server"})," 全局配置和多个 ",(0,i.jsx)(e.code,{children:"location"})," 配置；"]}),"\n",(0,i.jsx)(e.p,{children:"下面展开讲。"}),"\n",(0,i.jsxs)(e.h2,{id:"全局配置",children:["全局配置",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#全局配置",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"# 全局配置\nuser mikigo;\nworker_processes auto;\npid /run/nginx.pid;\ninclude /etc/nginx/modules-enabled/*.conf;\n"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"user"}),"  ：用于指定运行 ",(0,i.jsx)(e.code,{children:"nginx"})," 服务的用户和用户组；将 ",(0,i.jsx)(e.code,{children:"user"})," 注释掉或者配置成 ",(0,i.jsx)(e.code,{children:"nobady"})," 表示所有用户都可以运行；"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"worker_processes"})," ：指定工作线程数，",(0,i.jsx)(e.code,{children:"auto"})," 表示自动模式；"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"pid"}),"：指定 ",(0,i.jsx)(e.code,{children:"pid"})," 文件存放的路径"]}),"\n",(0,i.jsxs)(e.h2,{id:"events",children:["events",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#events",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"# events配置\nevents {\n        worker_connections 768;\n        # multi_accept on;\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"worker_connections"}),"：设置允许每一个 ",(0,i.jsx)(e.code,{children:"worker process"})," 同时开启的最大连接数；"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"multi_accept"}),": ",(0,i.jsx)(e.code,{children:"on"})," 表示一个工作进程可以同时接受所有的新连接，",(0,i.jsx)(e.code,{children:"off"})," 表示一个工作进程只能同时接受一个新的连接，默认是 ",(0,i.jsx)(e.code,{children:"off"}),"；"]}),"\n",(0,i.jsxs)(e.h2,{id:"http",children:["http",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#http",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-shell",children:"# http配置\nhttp {\n		# http全局配置\n        ##\n        # Basic Settings\n        ##\n		# 开启关闭sendfile方式传输文件\n        sendfile on;\n        # 此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用\n        tcp_nopush on;\n        tcp_nodelay on;\n        # 长连接超时时间，单位是秒\n        keepalive_timeout 65;\n        types_hash_max_size 2048;\n        # server_tokens off;\n\n        # server_names_hash_bucket_size 64;\n        # server_name_in_redirect off;\n        \n		# 文件扩展名与文件类型映射表\n        include /etc/nginx/mime.types;\n        # 默认文件类型\n        default_type application/octet-stream;\n\n        ##\n        # SSL Settings\n        ##\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n        ssl_prefer_server_ciphers on;\n\n        ##\n        # Logging Settings\n        ##\n		# 日志记录文件\n        access_log /var/log/nginx/access.log;\n        error_log /var/log/nginx/error.log;\n\n        ##\n        # Gzip Settings\n        ##\n		# 开启gzip压缩输出\n        gzip on;\n		# gzip 的一些配置项\n        # gzip_vary on;\n        # gzip_proxied any;\n        # gzip_comp_level 6;\n        # gzip_buffers 16 8k;\n        # gzip_http_version 1.1;\n        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\n        ##\n        # Virtual Host Configs\n        ##\n\n        include /etc/nginx/conf.d/*.conf;\n        include /etc/nginx/sites-enabled/*;\n        # 开启目录列表访问，合适下载服务器，默认关闭\n        autoindex on;\n        # 文件服务器文件大小\n        autoindex_exact_size on;\n        # 文件服务器文件时间\n        autoindex_localtime on;\n        #默认编码\n        charset utf-8;\n        \n        # server配置，可以有多个server\n        server {\n                listen          8001;\n                server_name     localhost;\n\n                location / {\n                        root /home/mikigo/Desktop/share;\n                        index index.html;\n                }\n        }\n}\n"})}),"\n",(0,i.jsx)(e.p,{children:"默认的 80 端口的服务是不用配置的；"}),"\n",(0,i.jsxs)(e.p,{children:["访问：",(0,i.jsx)(e.code,{children:"IP:80"}),"，实际访问的路径为：",(0,i.jsx)(e.code,{children:"/var/www/html"})]}),"\n",(0,i.jsxs)(e.p,{children:["访问：",(0,i.jsx)(e.code,{children:"IP:8001"}),"，实际访问的路径为：",(0,i.jsx)(e.code,{children:"/home/mikigo/Desktop/share"})]}),"\n",(0,i.jsxs)(e.h2,{id:"反向代理",children:["反向代理",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#反向代理",children:"#"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"http {\n\n    upstream rpc_server {\n        ip_hash;\n        server 10.8.13.66:8890;\n        server 10.8.13.7:8890;\n    \n    }\n\n    server {\n\n        listen       8090 default_server;\n        client_max_body_size 50m;\n        client_body_buffer_size 60;\n\n        location / {\n                proxy_pass http://rpc_server;\n        }\n}\n"})})]})}function t(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}let o=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%2FLinux%2FNginx%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.md"]={toc:[{text:"安装",id:"安装",depth:2},{text:"配置",id:"配置",depth:2},{text:"全局配置",id:"全局配置",depth:2},{text:"events",id:"events",depth:2},{text:"http",id:"http",depth:2},{text:"反向代理",id:"反向代理",depth:2}],title:"Nginx入门使用",headingTitle:"Nginx入门使用",frontmatter:{Author:"mikigo"}}}}]);