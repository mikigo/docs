"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["3907"],{1124:function(e,n,r){r.r(n),r.d(n,{default:()=>a});var i=r(2676),s=r(453);function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",p:"p",h3:"h3",h4:"h4",img:"img",pre:"pre",code:"code",h5:"h5",em:"em"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"一种定位目标图片坐标的图像识别技术交底书",children:["一种定位目标图片坐标的图像识别技术交底书",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#一种定位目标图片坐标的图像识别技术交底书",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"0缩略语和关键术语定义",children:["0、缩略语和关键术语定义",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#0缩略语和关键术语定义",children:"#"})]}),"\n",(0,i.jsxs)(n.table,{children:["\n",(0,i.jsxs)(n.thead,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.th,{align:"center"}),"\n",(0,i.jsx)(n.th,{align:"center"}),"\n",(0,i.jsx)(n.th,{align:"center"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.tbody,{children:["\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{align:"center",children:(0,i.jsx)(n.strong,{children:"缩写"})}),"\n",(0,i.jsx)(n.td,{align:"center",children:(0,i.jsx)(n.strong,{children:"全称"})}),"\n",(0,i.jsx)(n.td,{align:"center",children:(0,i.jsx)(n.strong,{children:"描述"})}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{align:"center",children:"Opencv"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"Open Source Computer Vision Library"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"是一个开源的计算机视觉库。"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{align:"center",children:"RGB"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"红(R)、绿(G)、蓝(B)"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"RGB即是代表红、绿、蓝三个通道的颜色， 强度值为0~255，比如：白色(0 0 0)，黑色(255 255 255)"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{align:"center",children:"Dogtail"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"Dogtail"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"一个使用Accessibility定位Qt应用中元素控件坐标的工具，是一个基于Python的开源三方库。"}),"\n"]}),"\n",(0,i.jsxs)(n.tr,{children:["\n",(0,i.jsx)(n.td,{align:"center",children:"Accessibility"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"Accessibility"}),"\n",(0,i.jsx)(n.td,{align:"center",children:"即辅助功能，在应用中提供Accessibility接口，使得外部软件可以操作相应的功能，技术诞生的初衷是为了让身体残疾的人能使用计算机。"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"1相关技术背景背景技术与本发明最相近似的现有实现方案现有技术",children:["1、相关技术背景（背景技术），与本发明最相近似的现有实现方案（现有技术）",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1相关技术背景背景技术与本发明最相近似的现有实现方案现有技术",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"元素的定位是自动化测试的核心内容，无论是web自动化测试还是app自动化测试都会存在元素定位不到的问题，此时可以考虑采用图像识别实现，通常采用Opencv提供的模板匹配技术，通过对比目标小图和屏幕大图，即可计算出小图在屏幕中的位置。"}),"\n",(0,i.jsxs)(n.h3,{id:"11与本发明相关的现有技术一",children:["1.1、与本发明相关的现有技术一",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11与本发明相关的现有技术一",children:"#"})]}),"\n",(0,i.jsxs)(n.h4,{id:"111现有技术一的技术方案",children:["1.1.1、现有技术一的技术方案",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#111现有技术一的技术方案",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"基于Accessibility对Qt应用的元素控件添加ObjectName，使用Dogtail工具提供的方法去定位元素控件。"}),"\n",(0,i.jsxs)(n.h4,{id:"112现有技术一的缺点",children:["1.1.2、现有技术一的缺点",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#112现有技术一的缺点",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）定位速度慢，对于元素控件继承的层级太多，在树形结构里面层级就会很深，Dogtail寻找元素的时候会去遍历树形结构里面所有的东西，导致元素定位速度慢。"}),"\n",(0,i.jsx)(n.p,{children:"（2）Dogtail工具本身存在不稳定性，在寻找元素的时候，存在找不到的情况，比如右键菜单里面的选项，使用Dogtail定位时，返回坐标始终为(0, 0)。"}),"\n",(0,i.jsx)(n.p,{children:"（3）如果应用中某些元素无法添加ObjectName时，只能通过索引的方式去找，不利于自动化测试用例的维护性。"}),"\n",(0,i.jsxs)(n.h3,{id:"12与本发明相关的现有技术二",children:["1.2、与本发明相关的现有技术二",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12与本发明相关的现有技术二",children:"#"})]}),"\n",(0,i.jsxs)(n.h4,{id:"121现有技术二的技术方案",children:["1.2.1、现有技术二的技术方案",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#121现有技术二的技术方案",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"基于Opencv提供的模板匹配功能，对比目标小图和屏幕大图，计算出在屏幕中的位置。"}),"\n",(0,i.jsxs)(n.h4,{id:"122现有技术二的缺点",children:["1.2.2、现有技术二的缺点",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#122现有技术二的缺点",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）使用Opencv的模板匹配函数，需要通过Opencv提供的imread函数读取图片，而imread函数只能传入图片的路径，也就是说必须要有目标小图和屏幕大图的本地文件，在自动化测试用例中，目标小图是提前截好的，放到一个固定位置，而屏幕大图是在用例执行的过程中实时截取的，这样就必须要将实时截取的屏幕大图保存为本地文件，这点就会有一些问题。"}),"\n",(0,i.jsx)(n.p,{children:"在AMD平台上由于计算机处理速度相对较快，实时保存图片文件的动作不会有明显的感觉，而在ARM和MIPS平台上计算机处理速度相对较慢，用例执行的过程中，屏幕大图保存的文件相对于要识别的时间点是滞后的，最主要原因就在于要生成本地图片文件。"}),"\n",(0,i.jsx)(n.p,{children:"（2）Opencv在ARM和MIPS上没有对应的官方包，无法使用pip安装Opencv的问题，在搭建自动化测试环境的时候，比较费时间。"}),"\n",(0,i.jsxs)(n.h2,{id:"2本发明技术方案的详细阐述",children:["2、本发明技术方案的详细阐述",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2本发明技术方案的详细阐述",children:"#"})]}),"\n",(0,i.jsxs)(n.h3,{id:"21本发明所要解决的技术问题",children:["2.1、本发明所要解决的技术问题",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21本发明所要解决的技术问题",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）在国产化平台UI自动化测试过程中，定位元素控件时不稳定，且速度较慢。"}),"\n",(0,i.jsx)(n.p,{children:"（2）自动化测试操作步骤中，需要准确获取元素控件的坐标。"}),"\n",(0,i.jsx)(n.p,{children:"（3）在UI自动化测试过程中，UI界面变化大，且容易受到环境影响，断言的准确性问题。"}),"\n",(0,i.jsxs)(n.h3,{id:"22本发明提供的完整技术方案",children:["2.2、本发明提供的完整技术方案",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22本发明提供的完整技术方案",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在自动化测试的过程中，通常将需要识别的按钮或控件区域截取为一个小图，然后在整个屏幕中对小图进行匹配。为了实现识别图像的目的，我们可以通过将图片的每个像素的RGB值，与整个屏幕中的RGB进行对比，如果小图上的RGB值与对应大图位置的RGB都相等，则匹配成功，即可返回小图在大图中的中心坐标点。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wpsOOb556.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图1 图像识别流程图"}),"\n",(0,i.jsxs)(n.h4,{id:"221-读取小图和大图的rgb值",children:["2.2.1 读取小图和大图的RGB值",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#221-读取小图和大图的rgb值",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）小图的RGB值"}),"\n",(0,i.jsx)(n.p,{children:"small_data = small_pic.load() # load()会将图片的RGB值获取到，数据格式为一个二维列表，赋值给一个变量small_data。"}),"\n",(0,i.jsx)(n.p,{children:"（2）大图的RGB值"}),"\n",(0,i.jsx)(n.p,{children:"big_data = big_pic.load()"}),"\n",(0,i.jsxs)(n.h4,{id:"222-将小图与大图的rgb值进行匹配",children:["2.2.2 将小图与大图的RGB值进行匹配",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#222-将小图与大图的rgb值进行匹配",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）匹配从大图的坐标（0，0）开始匹配，匹配小图里面所有的坐标点（0，0）—（small_pic.width，small_pic.height）"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wpsNyOnvF.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图2 匹配启始位置"}),"\n",(0,i.jsx)(n.p,{children:"（2）如果在大图的（0，0）对应的所有小图的RGB值不相等，则移动到下一个坐标点（1，0），同样匹配小图里面所有的坐标点（0，0）—（small_pic.width，small_pic.height）"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wps25MHUd.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图3 逐个像素点移动"}),"\n",(0,i.jsx)(n.p,{children:"（3）按照这样的规律将这一行每移动一个坐标点，都将小图所有的RGB与对应大图的值进行匹配。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wps5JY2jM.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图4 移动到一行的最右边"}),"\n",(0,i.jsx)(n.p,{children:"（4）如果在大图的其中一个坐标点上匹配到了小图的所有RGB值，则此时返回小图在大图中的坐标点。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wpsLjopJk.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图5 找到在屏幕中的位置"}),"\n",(0,i.jsx)(n.p,{children:"（5）如果匹配了大图所有的坐标点，都没有匹配到，则说明大图中不存在小图，匹配失败。"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6_assets/wpsH5eN8S.jpg",alt:""})}),"\n",(0,i.jsx)(n.p,{children:"图6 移动到最右下角都没有找到"}),"\n",(0,i.jsxs)(n.h4,{id:"223-关键技术",children:["2.2.3 关键技术",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#223-关键技术",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"根据以上的设计思路，代码实现如下："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import pyscreenshot\nimport random\nfrom PIL import Image\n\ndef check_match(x, y, small_pic, big_data, small_data):\n    '''设置匹配度0.9'''\n    same = 0\n    diff = 0\n    for i in range(small_pic.width):\n        for j in range(small_pic.height):\n            if big_data[x + i, y + j] == small_data[i, j]:\n                same = same + 1\n            else:\n                diff = diff + 1\n    # 设置匹配度0.9\n    similarity = same / (same + diff)\n    if similarity >= 0.9:\n        return True\n    else:\n        return False\n\n\ndef random_point(small_pic):\n    ''' 每次随机取10-20个点，并在小图中随机取坐标\n'''\n    point_list = []\n    count = random.randrange(10, 16)\n    for i in range(count):\n        sx = random.randrange(0, small.width)\n        sy = random.randrange(0, small.height)\n        point_list.append([sx, sy])\n    return point_list\n\ndef random_match(x, y, point_list, big_data, small_data):\n    '''在小图中随机取几个点进行匹配,随机点同样设置匹配度0.9'''\n    same = 0\n    diff = 0\n    for point in point_list:\n        if big_data[x + point[0], y + point[1]] == small_data[point[0], point[1]]:\n            same = same + 1\n        else:\n            diff = diff + 1\n\n    if same / (same + diff) >= 0.9:\n        return True\n    else:\n        return False\n\ndef match_image(pic_name):\n    '''通过一张小图，找到对应当前屏幕中的位置'''\n    # 打开小图和大图，获取RGB值\n    file_path = \"/home/uos/Documents/\" + pic_name\n    small_pic = Image.open(file_path)\n    samll_data = small_pic.load()\n    big_pic = pyscreenshot.grab()\n    big_data = big_pic.load()\n    point_list = random_point(small_pic)\n    # 遍历大图和小图的横纵坐标\n    for x in range(big_pic.width - small_pic.width):\n        for y in range(big_pic.height - small_pic.height):\n            # 判断随机点\n            if random_match(x, y, point_list, big_data, small_data):\n                # 判断匹配度\n                if check_match(x, y, small_pic, big_data, small_data):\n                    # 返回中心坐标\n                    return (x + small_pic.width / 2, y + small_pic.height / 2)\n    return False\n"})}),"\n",(0,i.jsx)(n.p,{children:"通过match_image()这个函数，传入目标小图的文件名称，即可返回在当前屏幕中的中心坐标。"}),"\n",(0,i.jsx)(n.p,{children:"在UI自动化测试项目中，测试用例如果需要通过图像识别去获取目标控件的坐标，只需调用这个函数即可。"}),"\n",(0,i.jsxs)(n.h5,{id:"2231-小图在大图中匹配的逻辑算法",children:["2.2.3.1 小图在大图中匹配的逻辑算法",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2231-小图在大图中匹配的逻辑算法",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"$$\nsmallRGB[i, j] = bigRGB[x + i, y + j]\n$$"}),"\n",(0,i.jsx)(n.p,{children:"其中，x是大图的横坐标的遍历的值，y是大图的纵坐标的遍历的值，i是小图的横坐标的遍历的值，j是小图的纵坐标的遍历的值，RGB的取值是在(0, 0 ,0)~(255, 255, 255)之间。"}),"\n",(0,i.jsxs)(n.h5,{id:"2232-快速匹配",children:["2.2.3.2 快速匹配",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2232-快速匹配",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"在小图中随机选取一些坐标点，如果选取的这些坐标点存在与大图中RGB值不相等的情况，则直接跳出本次匹配，进行大图的下一个坐标点的匹配，如果选取的坐标点都匹配成功，再进行剩余坐标点的匹配，这样可以实现小图在大图中快速匹配的效果，提升图像识别的速度。"}),"\n",(0,i.jsx)(n.p,{children:"2.2.3.3 匹配度"}),"\n",(0,i.jsxs)(n.p,{children:["在实际应用中，我们需要对错误匹配的坐标点有一定的容忍度，这里我称为”",(0,i.jsx)(n.strong,{children:"匹配度"}),"“。比如，匹配度为90%，也就是说，只要小图中90%的坐标点的 RGB，与大图中对应位置能匹配上，那么就判定为匹配成功。"]}),"\n",(0,i.jsx)(n.p,{children:"同时，我们对随机选取做”预匹配“的几个点也设置一个匹配度，这样可以进一步提升匹配效率。"}),"\n",(0,i.jsx)(n.p,{children:"在实际项目中，我将匹配度设置为90%时，在近三个月的自动化用例执行过程中，每天执行857条用例，没有出现误报的情况。"}),"\n",(0,i.jsx)(n.p,{children:"2.2.3.4 在UI自动化测试中的应用"}),"\n",(0,i.jsx)(n.p,{children:"（1）获取到元素控件的坐标之后，使用 xdotool 或者 pyautogui 等工具，对元素进行点击、双击、拖拽、输入等动作，实现 UI 自动化测试中的操作步骤。"}),"\n",(0,i.jsx)(n.p,{children:"（2）通过判断屏幕中是否存在元素，用于 UI 自动化测试中的断言。"}),"\n",(0,i.jsx)(n.p,{children:"（3）由元素控件的定位及操作，以及在关键步骤的断言，构成了 UI 自动化测试的完整解决方案。"}),"\n",(0,i.jsxs)(n.h2,{id:"23本发明技术方案带来的有益效果",children:["2.3、本发明技术方案带来的有益效果",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#23本发明技术方案带来的有益效果",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"（1）解决了 UI 自动化测试中，在国产化平台系统资源不足的情况下，快速实现元素控件定位。"}),"\n",(0,i.jsx)(n.p,{children:"（2）降低了自动化测试环境搭建的复杂度，同时减少了自动化测试环境搭建的时间，从而提升测试效率。"}),"\n",(0,i.jsx)(n.p,{children:"（3）在 UI 自动化测试中，能准确对自动化用例执行结果进行断言。"}),"\n",(0,i.jsxs)(n.h2,{id:"24针对上述技术方案是否还有替代方案同样能完成发明目的",children:["2.4、针对上述技术方案，是否还有替代方案同样能完成发明目的",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#24针对上述技术方案是否还有替代方案同样能完成发明目的",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"暂无"}),"\n",(0,i.jsxs)(n.h1,{id:"3本发明的技术关键点和欲保护点是什么",children:["3、本发明的技术关键点和欲保护点是什么",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3本发明的技术关键点和欲保护点是什么",children:"#"})]}),"\n",(0,i.jsxs)(n.p,{children:["（1）将屏幕大图的RGB值保存到内存中，然后通过算法：$smallRGB[i, j] = bigRGB[x + i, y + j]$ 对比目标图片与屏幕大图 ",(0,i.jsx)(n.code,{children:"RGB"}),"   值，从而获取到目标图片在屏幕中的坐标位置。同时，在对比图像的过程中，通过随机选取一些点进行预匹配，提高图像识别的的速度，解决了在图像对比过程中，消耗大量 CPU 资源的问题。通过设置匹配度，提供图像识别的成功率，提高在 ",(0,i.jsx)(n.code,{children:"UI"})," 自动化测试中使用图像识别的稳定性，同时提升了自动化测试脚本的健壮性和稳定性，解决了在图像识别的过程中，国产化架构平台生成本地图片文件速度慢的问题，实现了在国产化平台上执行UI自动化测试过程中，快速、稳定的定位目标元素控件的效果。"]}),"\n",(0,i.jsxs)(n.p,{children:["（2）通过获取到元素控件的坐标，再配合使用 ",(0,i.jsx)(n.code,{children:"xdotool"})," 或者 ",(0,i.jsx)(n.code,{children:"pyautogui"})," 等工具，控制鼠标和键盘进行操作，从而实现 UI 自动化测试中模拟人工测试的操作步骤的技术方案运用。"]}),"\n",(0,i.jsx)(n.p,{children:"（3）通过获取到元素控件的坐标，进而可以判断目标元素是否存在，可用于UI自动化测试中的关键位置的断言方案运用。"}),"\n",(0,i.jsxs)(n.h1,{id:"4附件",children:["4、附件：",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4附件",children:"#"})]}),"\n",(0,i.jsx)(n.p,{children:"参考文献（如专利/论文/标准等）"}),"\n",(0,i.jsx)(n.p,{children:"l random:"}),"\n",(0,i.jsxs)(n.p,{children:["n ",(0,i.jsx)(n.a,{href:"https://docs.python.org/zh-cn/3/library/random.html",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://docs.python.org/zh-cn/3/library/random.html",target:"_blank",rel:"noopener noreferrer",children:"https://docs.python.org/zh-cn/3/library/random.html"})})})]}),"\n",(0,i.jsx)(n.p,{children:"l pyscreenshot:"}),"\n",(0,i.jsxs)(n.p,{children:["n ",(0,i.jsx)(n.a,{href:"https://github.com/ponty/pyscreenshot/tree/2.3",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://github.com/ponty/pyscreenshot/tree/2.3",target:"_blank",rel:"noopener noreferrer",children:"https://github.com/ponty/pyscreenshot/tree/2.3"})})})]}),"\n",(0,i.jsx)(n.p,{children:"l PIL"}),"\n",(0,i.jsxs)(n.p,{children:["n  ",(0,i.jsx)(n.a,{href:"https://pillow.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer",children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://pillow.readthedocs.io/en/stable/",target:"_blank",rel:"noopener noreferrer",children:"https://pillow.readthedocs.io/en/stable/"})})})]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}let a=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["tech_doc%2F%E4%B8%93%E5%88%A9%E4%BA%A4%E5%BA%95%E4%B9%A6%2F%E4%B8%80%E7%A7%8D%E5%AE%9A%E4%BD%8D%E7%9B%AE%E6%A0%87%E5%9B%BE%E7%89%87%E5%9D%90%E6%A0%87%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB%E6%8A%80%E6%9C%AF%E4%BA%A4%E5%BA%95%E4%B9%A6.md"]={toc:[{text:"0、缩略语和关键术语定义",id:"0缩略语和关键术语定义",depth:2},{text:"1、相关技术背景（背景技术），与本发明最相近似的现有实现方案（现有技术）",id:"1相关技术背景背景技术与本发明最相近似的现有实现方案现有技术",depth:2},{text:"1.1、与本发明相关的现有技术一",id:"11与本发明相关的现有技术一",depth:3},{text:"1.1.1、现有技术一的技术方案",id:"111现有技术一的技术方案",depth:4},{text:"1.1.2、现有技术一的缺点",id:"112现有技术一的缺点",depth:4},{text:"1.2、与本发明相关的现有技术二",id:"12与本发明相关的现有技术二",depth:3},{text:"1.2.1、现有技术二的技术方案",id:"121现有技术二的技术方案",depth:4},{text:"1.2.2、现有技术二的缺点",id:"122现有技术二的缺点",depth:4},{text:"2、本发明技术方案的详细阐述",id:"2本发明技术方案的详细阐述",depth:2},{text:"2.1、本发明所要解决的技术问题",id:"21本发明所要解决的技术问题",depth:3},{text:"2.2、本发明提供的完整技术方案",id:"22本发明提供的完整技术方案",depth:3},{text:"2.2.1 读取小图和大图的RGB值",id:"221-读取小图和大图的rgb值",depth:4},{text:"2.2.2 将小图与大图的RGB值进行匹配",id:"222-将小图与大图的rgb值进行匹配",depth:4},{text:"2.2.3 关键技术",id:"223-关键技术",depth:4},{text:"2.3、本发明技术方案带来的有益效果",id:"23本发明技术方案带来的有益效果",depth:2},{text:"2.4、针对上述技术方案，是否还有替代方案同样能完成发明目的",id:"24针对上述技术方案是否还有替代方案同样能完成发明目的",depth:2}],title:"4、附件：",headingTitle:"4、附件：",frontmatter:{Author:"mikigo"}}}}]);